<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Boctorio&#39;s Blog</title>
  
  <subtitle>欢迎访问我校OJ   https://hpuoj.com</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://boctorio.github.io/"/>
  <updated>2019-10-01T12:44:08.834Z</updated>
  <id>https://boctorio.github.io/</id>
  
  <author>
    <name>Boctorio</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>圆上整点个数及坐标求解方法</title>
    <link href="https://boctorio.github.io/2019/10/01/%E5%9C%86%E4%B8%8A%E6%95%B4%E7%82%B9%E4%B8%AA%E6%95%B0%E6%B1%82%E8%A7%A3%E6%96%B9%E6%B3%95/"/>
    <id>https://boctorio.github.io/2019/10/01/圆上整点个数求解方法/</id>
    <published>2019-10-01T11:59:14.000Z</published>
    <updated>2019-10-01T12:44:08.834Z</updated>
    
    <content type="html"><![CDATA[<p>在阅读这篇文章之前推荐去看一下以下两个视频：<br><a href="https://www.bilibili.com/video/av12131743/" target="_blank" rel="noopener">隐藏在素数规律中的π</a><br><a href="https://www.bilibili.com/video/av12133637/?spm_id_from=333.788.videocard.8" target="_blank" rel="noopener">全部勾股数的可视化（重点）</a></p><a id="more"></a><h3 id="前置技能"><a href="#前置技能" class="headerlink" title="前置技能"></a>前置技能</h3><p>了解复数运算规则（应该都知道）</p><h3 id="圆上整点的计算"><a href="#圆上整点的计算" class="headerlink" title="圆上整点的计算"></a>圆上整点的计算</h3><p>看过上面视频之后相信大家对求解方法有了一点认识。</p><blockquote><p>对于一个复数域的点$(a,b)$：<br>它所表示的复数为$a+bi$；<br>距离原点距离为$\sqrt{a^2+b^2}$；<br>它所表示的复数的平方为$(a^2-b^2)+(2ab)i$ ；<br>平方到原点的距离为$a^2+b^2$。</p></blockquote><p>因此对于一个圆$C_1:x^2+y^2=r^2$ ,我们只需要求出复数$a+bi $，使得$a^2+b^2=r$，那么就能得到$C_1$ 上的整点$(a^2-b^2,2ab)$。</p><p>对于$(a,b)$的求解，我们直接暴力枚举即可。时间复杂度为$O(\sqrt{r})$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> d[<span class="number">4</span>][<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="built_in">set</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;st;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">0</span>;a*a&lt;=r;a++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b=(<span class="keyword">int</span>)<span class="built_in">sqrt</span>(r-a*a);</span><br><span class="line">        <span class="comment">//找到一对解，并且不是斜率为1的直线上的解</span></span><br><span class="line">        <span class="keyword">if</span>(a*a+b*b==r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//负数域运算(x+i)*(x+i)</span></span><br><span class="line">            <span class="keyword">int</span> a=<span class="built_in">abs</span>(x*x-i*i),b=<span class="number">2</span>*x*i;</span><br><span class="line">            <span class="comment">//八个对称的点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++) st.insert(&#123;d[j][<span class="number">0</span>]*a,d[j][<span class="number">1</span>]*b&#125;);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++) st.insert(&#123;d[j][<span class="number">0</span>]*b,d[j][<span class="number">1</span>]*a&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遗漏掉的情况"><a href="#遗漏掉的情况" class="headerlink" title="遗漏掉的情况"></a>遗漏掉的情况</h3><p>看过视频的都知道，上述方法在求解的过程中会遗漏掉<strong>坐标轴上的整点</strong>以及一些<strong>勾股数的整数倍的点</strong>，因此我们需要对$r$的每个因子进行计算，才能够保证能够求解到所有的点，总复杂度约为$O(r^\frac{3}{4})$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> d[<span class="number">4</span>][<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="built_in">set</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;st;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> <span class="built_in">exp</span>)</span></span>&#123;<span class="comment">//exp代表扩大多少倍</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;r;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=(<span class="keyword">int</span>)<span class="built_in">sqrt</span>(r-i*i);</span><br><span class="line">        <span class="keyword">if</span>(x*x+i*i==r &amp;&amp; x!=i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//负数域运算(x+i)*(x+i)</span></span><br><span class="line">            <span class="keyword">int</span> a=<span class="built_in">abs</span>(x*x-i*i),b=<span class="number">2</span>*x*i;</span><br><span class="line">            <span class="comment">//八个对称的点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++) st.insert(&#123;d[j][<span class="number">0</span>]*a*<span class="built_in">exp</span>,d[j][<span class="number">1</span>]*b*<span class="built_in">exp</span>&#125;);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++) st.insert(&#123;d[j][<span class="number">0</span>]*b*<span class="built_in">exp</span>,d[j][<span class="number">1</span>]*a*<span class="built_in">exp</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    st.clear();</span><br><span class="line">    <span class="comment">//四个数轴上的点</span></span><br><span class="line">    st.insert(&#123;r,<span class="number">0</span>&#125;);st.insert(&#123;-r,<span class="number">0</span>&#125;);</span><br><span class="line">    st.insert(&#123;<span class="number">0</span>,r&#125;);st.insert(&#123;<span class="number">0</span>,-r&#125;);</span><br><span class="line">    <span class="comment">//倍数关系的点</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;=r;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(r%i==<span class="number">0</span>)&#123;<span class="comment">//枚举每个因子</span></span><br><span class="line">            divide(i,r/i);</span><br><span class="line">            divide(r/i,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在阅读这篇文章之前推荐去看一下以下两个视频：&lt;br&gt;&lt;a href=&quot;https://www.bilibili.com/video/av12131743/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;隐藏在素数规律中的π&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.bilibili.com/video/av12133637/?spm_id_from=333.788.videocard.8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;全部勾股数的可视化（重点）&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数论" scheme="https://boctorio.github.io/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>2019HPU-ICPC-Training-1</title>
    <link href="https://boctorio.github.io/2019/09/22/2019HPU-ICPC-Training-1/"/>
    <id>https://boctorio.github.io/2019/09/22/2019HPU-ICPC-Training-1/</id>
    <published>2019-09-22T11:39:03.000Z</published>
    <updated>2019-09-22T13:32:05.472Z</updated>
    
    <content type="html"><![CDATA[<p>发挥还行，被$J$题吊着打。学弟们果然还是很强的。</p><a id="more"></a><p><a href="http://codeforces.com/problemset/problem/888/F" target="_blank" rel="noopener">A.Connecting Vertices</a></p><p><a href="http://codeforces.com/problemset/problem/888/A" target="_blank" rel="noopener">B.Local Exterma</a></p><p>题目大意：找一个数组中有几个数满足：$a_{i-1}\leq a_i \geq a_{i+1}$或$a_{i-1} \geq a_i \leq a_{i+1}$ $(2\leq i \leq n-1)$.</p><p>签到题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;a[i<span class="number">-1</span>] &amp;&amp; a[i]&lt;a[i+<span class="number">1</span>]) res++;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;a[i<span class="number">-1</span>] &amp;&amp; a[i]&gt;a[i+<span class="number">1</span>]) res++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/problemset/problem/888/G" target="_blank" rel="noopener">C.Xor-MST</a></p><p><a href="http://codeforces.com/problemset/problem/888/B" target="_blank" rel="noopener">D.Buggy Robot</a></p><p>题目大意：一个机器人从点(0,0)出发，从$n$个向上下左右的操作中最多能挑出几个操作使得机器人移动完之后能够到达原点。</p><p>向左步数=向右步数，向上步数=向下步数，分别取最小值相加即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'L'</span>) a[<span class="number">1</span>]++;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'R'</span>) a[<span class="number">2</span>]++;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'U'</span>) a[<span class="number">3</span>]++;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'D'</span>) a[<span class="number">4</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">2</span>*min(a[<span class="number">1</span>],a[<span class="number">2</span>])+<span class="number">2</span>*min(a[<span class="number">3</span>],a[<span class="number">4</span>]));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/problemset/problem/888/C" target="_blank" rel="noopener">E.K-Dominant Character</a></p><p>给你一个长度为$n$字符串，求最小的长度$m$，使得字符串中所有长度为$m$的子字符串中均包含某一种字符。</p><p>二分模拟计算即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>],n;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;x;i++)&#123;</span><br><span class="line">a[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) <span class="keyword">if</span>(!a[i]) vis[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;n;i++)&#123;</span><br><span class="line">a[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">a[s[i-x]-<span class="string">'a'</span>]--;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++) <span class="keyword">if</span>(!a[j]) vis[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i]) <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">n=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>,r=n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">mp[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="keyword">int</span> m=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(check(m)) r=m<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> l=m+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,r+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/problemset/problem/888/E" target="_blank" rel="noopener">F.Maximum Subsequence</a></p><p>题目大意：给你一个大小为$n$的数组和一个数m，求从数组中挑出任意多个数（可以为零，不可以重复），计算出<br>$$<br>(\sum_{i=1}^{k}a_{b_i})\space mod \space m<br>$$<br>的最大值，其中$k$为选出的数的个数。</p><p>超大背包，将所有物品平均分成两部分，然后枚举所有状态。再枚举某一堆物品的所有值，二分从另一堆查找最优解即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">ll a[maxn];</span><br><span class="line">ll q[maxn],p[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">a[i]%=m;</span><br><span class="line">&#125;</span><br><span class="line">ll x=n/<span class="number">2</span>;</span><br><span class="line">ll N=<span class="number">1</span>&lt;&lt;x;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;x;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i&gt;&gt;j)&amp;<span class="number">1</span>) sum=(sum+a[j])%m;</span><br><span class="line">&#125;</span><br><span class="line">p[i]=sum;</span><br><span class="line">&#125;</span><br><span class="line">N=<span class="number">1</span>&lt;&lt;(n-x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n-x;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i&gt;&gt;j)&amp;<span class="number">1</span>) sum=(sum+a[j+x])%m;</span><br><span class="line">&#125;</span><br><span class="line">q[i]=sum;</span><br><span class="line">&#125;</span><br><span class="line">sort(q,q+N);</span><br><span class="line">ll res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1</span>&lt;&lt;x;i++)&#123;</span><br><span class="line">ll pos=lower_bound(q,q+N,m<span class="number">-1</span>-p[i])-q;</span><br><span class="line">res=max(res,(p[i]+q[pos])%m);</span><br><span class="line"><span class="keyword">if</span>(pos) res=max(res,(p[i]+q[pos<span class="number">-1</span>])%m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/problemset/problem/888/D" target="_blank" rel="noopener">G.Alomost Identity Permutations</a></p><p>题目大意：问$n$个数的全排列中，有多少排列满足$\sum p_i=i$的值大于等于$n-k$。</p><p>$k\leq$4，枚举即可。</p><p>对于$k=1$ , $res=1$;<br>对于$k=2$ , $res=C_{n}^{2}$<br>对于$k=3$ , $res=C_{n}^{3}*2$<br>对于$k=4$ , $res=C_{n}^{4}*9$<br>上面每一行的意义在于：从$n$个数中挑出$k$个数，每种选法又分别多少种方案使得$\sum_{i=1}^{k} p_i=1$ 的值为0。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n,k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;k);</span><br><span class="line">ll cur=n;</span><br><span class="line">ll res=<span class="number">1</span>;</span><br><span class="line">ll fac=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=k;i++)&#123;</span><br><span class="line">fac=fac*i;</span><br><span class="line">cur=cur*(n-i+<span class="number">1</span>)/i;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">2</span>) res+=cur;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">3</span>) res+=cur*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">4</span>) res+=cur*<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/contest/777/problem/C" target="_blank" rel="noopener">H.Alyona and Spreadsheet</a></p><p>题目大意：从$n*m$的矩阵中挑出从第$l$行到第$r$行，问在这$(r-l+1)*m$的矩阵中是否存在某一列，使得这一列的元素按序号从小到大非递减。</p><p>前缀和即可。计算每一行某个元素前面的所有的元素能够非递增的最小的起点，由于$n，m$的值未定，所以必须用一维数组来保存。</p><p>在查找$[l,r]$行时，只需要看第$r$行的m个元素是否存在某个元素，他所在的非递减序列的起点小于等于$l$即可，由于不能用$for$循环查询，所以需要前缀和。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">ll a[maxn];</span><br><span class="line">ll b[maxn];</span><br><span class="line">ll res[maxn];</span><br><span class="line">ll dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n,m,q,l,r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">ll pos=<span class="number">1</span>;</span><br><span class="line">res[j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[m*(i<span class="number">-1</span>)+j]&gt;=a[(i<span class="number">-2</span>)*m+j]) res[(i<span class="number">-1</span>)*m+j]=pos;<span class="comment">//非递减</span></span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//递减的话就是一个新的起点</span></span><br><span class="line">res[m*(i<span class="number">-1</span>)+j]=i;</span><br><span class="line">pos=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j&gt;<span class="number">1</span>) res[m*(i<span class="number">-1</span>)+j]=min(res[m*(i<span class="number">-1</span>)+j],res[m*(i<span class="number">-1</span>)+j<span class="number">-1</span>]);\\计算前缀最小值</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;q);</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;l,&amp;r);</span><br><span class="line"><span class="keyword">if</span>(res[r*m]&lt;=l) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/contest/777/problem/A" target="_blank" rel="noopener">I.Shell Game</a></p><p>题目大意：三个杯子，初始某个杯子中有一个小球，经过$n$次下列操作后，小球在第$x$号杯子（0，1，2号）：</p><ol><li>此次操作次数的序号为第奇数次，交换0号和1号杯子。</li><li>此次操作次数的序号为第偶数次，交换1号和2号杯子。</li></ol><p>问初始小球在那个杯子。</p><p>模拟后发现，每6次操作一个循环，因此$n \space mod \space 6$后模拟计算即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> res[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">n%=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">0</span>;a[<span class="number">1</span>]=<span class="number">1</span>;a[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>) swap(a[<span class="number">0</span>],a[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">else</span> swap(a[<span class="number">1</span>],a[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[m]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/contest/777/problem/E" target="_blank" rel="noopener">J.Hanoi Factory</a></p><p>题目大意：给你$n$个圆环，每个圆环有一个外径和内径，现在将这些圆环堆起来，满足上面的圆环外径$b_i \leq b_j 且b_i &gt;a_j$ 其中$a_j,b_j$分别为下面一个圆环的内径和外径。问最高能将这些圆环堆多高。</p><p>一个简单的模拟题。。。（我居然写了一下午的区间更新查询线段树）</p><p>按照圆环外径从大到小排序，如果外径相同按照内径从大到小排序，然后按照顺序模拟即可，如果当前这个圆环放不到前面这个圆环，就继续往前面找，直到找到为止（这里可以用一个数组保存每个圆环找到的位置。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll l,r,h;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">friend</span> <span class="keyword">operator</span>&lt;(node i,node j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i.r==j.r) <span class="keyword">return</span> i.l&gt;j.l;</span><br><span class="line">        <span class="keyword">return</span> i.r&gt;j.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line">ll res[maxn];</span><br><span class="line">ll pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;a[i].l,&amp;a[i].r,&amp;a[i].h);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">    res[<span class="number">1</span>]=a[<span class="number">1</span>].h;</span><br><span class="line">    <span class="keyword">int</span> cur=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!(a[cur].l&lt;a[i].r &amp;&amp; a[i].r&lt;=a[cur].r) &amp;&amp; cur) cur=pre[cur];</span><br><span class="line">        res[i]=res[cur]+a[i].h;</span><br><span class="line">        pre[i]=cur;</span><br><span class="line">        cur=i;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans=max(ans,res[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/contest/777/problem/D" target="_blank" rel="noopener">K.Cloud of Hashtags</a></p><p>题目大意：有$n$个新闻标题，你要删除最少的字符，使得最后所有的标题按照输入顺序字典序升序排列。并输出删除后的新闻标题。</p><p>首先知道如果两个标题的字典序比较为降序，那么一定是要删除前面的那个标题，使得那个标题字典序变小。所以我们从后往前删除，能够保证每个标题删除的字符数量最少。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="built_in">string</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> len[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">len[i]=a[i].length();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=min(len[i],len[i+<span class="number">1</span>]);j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i][j]&lt;a[i+<span class="number">1</span>][j]) <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[i][j]&gt;a[i+<span class="number">1</span>][j])&#123;</span><br><span class="line">    a[i][j]=<span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;a[i][j]!=<span class="string">'\0'</span>;j++)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://codeforces.com/contest/777/problem/B" target="_blank" rel="noopener">L.Game of Credit Cards</a></p><p>题目大意：$S$某,$M$某分别有一张序号长度为$n$的信用卡，他们定了一个规则：比赛分为$n$局，每局$S$某，$M$某从$n$个数字中分别不重复的取出一个数字，谁的数字小谁得一分，平局不算分。<br>问如果随机排列这些数字，$S$某可能的最高得分和M某可能的最低得分分别为多少。</p><p>模拟题，算最高分时只要从小到大让$S$某牌去压$M$某小于自己当前牌大小的牌即可。算最低分时，只要从大到小让$M$某去压$S$某大于等于自己当前牌大小的牌即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>],b[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,s,t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">a[s[i]-<span class="string">'0'</span>]++;</span><br><span class="line">b[t[i]-<span class="string">'0'</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res1=<span class="number">0</span>,res2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">sum+=a[i];</span><br><span class="line">res1+=min(b[i],sum);</span><br><span class="line">sum-=min(b[i],sum);</span><br><span class="line">&#125;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">res2+=min(a[i],sum);</span><br><span class="line">sum-=min(a[i],sum);</span><br><span class="line">sum+=b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,n-res1,res2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发挥还行，被$J$题吊着打。学弟们果然还是很强的。&lt;/p&gt;
    
    </summary>
    
      <category term="HPU训练" scheme="https://boctorio.github.io/categories/HPU%E8%AE%AD%E7%BB%83/"/>
    
    
  </entry>
  
  <entry>
    <title>2017CCPC杭州站部分题解</title>
    <link href="https://boctorio.github.io/2019/09/21/2017CCPC%E6%9D%AD%E5%B7%9E%E7%AB%99%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>https://boctorio.github.io/2019/09/21/2017CCPC杭州站部分题解/</id>
    <published>2019-09-21T11:31:39.000Z</published>
    <updated>2019-09-21T12:06:59.270Z</updated>
    
    <content type="html"><![CDATA[<p>作为新的队伍训练赛，整体成绩还算满意。总结下来：算法竞赛不需要证明。（真诚.jpg）</p><a id="more"></a><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6264" target="_blank" rel="noopener">A.Super-palindrome</a></p><p>签到题，能够看出奇数位必定相同，偶数位必定相同。分情况讨论即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt;mp1,mp2;</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            mp1[s[i]]++;</span><br><span class="line">            sum=max(sum,mp1[s[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">        res+=(len+<span class="number">1</span>)/<span class="number">2</span>-sum;</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=len;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            mp2[s[i]]++;</span><br><span class="line">            sum=max(sum,mp2[s[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">        res+=len/<span class="number">2</span>-sum;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6265" target="_blank" rel="noopener">B.Master pf Phi</a></p><p>题目大意为：求$\sum_{d|n}\phi(d)*\frac{n}{d}$ ,$\phi(n)$ 为欧拉函数。</p><p>盲猜出的结论为$n*\prod_{i=1}^{m}\frac{q_i*\phi(p_i)+1}{p_i}$ ，具体推到<a href="www.baidu.com">百度一下，你就知道</a>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt;mp1,mp2;</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            mp1[s[i]]++;</span><br><span class="line">            sum=max(sum,mp1[s[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">        res+=(len+<span class="number">1</span>)/<span class="number">2</span>-sum;</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=len;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            mp2[s[i]]++;</span><br><span class="line">            sum=max(sum,mp2[s[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">        res+=len/<span class="number">2</span>-sum;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6266" target="_blank" rel="noopener">C.Hakase and Nano</a></p><p>煜神推出来的题目，吹爆人赢！！！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm=<span class="number">1e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">int</span> n,d;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;d;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="comment">// 计算1的个数</span></span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">1</span>)</span><br><span class="line">    num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// H先手</span></span><br><span class="line">    <span class="keyword">if</span>(d==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">// 全是1</span></span><br><span class="line">    <span class="keyword">if</span>(!num)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">// 全是1</span></span><br><span class="line">    <span class="keyword">if</span>(!num)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">if</span>((n%<span class="number">3</span>==<span class="number">0</span>&amp;&amp;num==<span class="number">1</span>)||(n%<span class="number">3</span>==<span class="number">1</span>&amp;&amp;num==<span class="number">1</span>))</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6267" target="_blank" rel="noopener">D.Master of Random</a></p><p>题目大意为：0节点为带权根节点，接下来1~n-1号带权节点都会随机选一个比他自身小的节点作为父节点，问从随机生成的树中挑一棵子树的大小的期望。</p><p>这个题目其实也是在纸上猜出来的结论。结论很复杂，对于每一个节点，我们只需要计算它被选中的概率即可。0号节点几率必定为$\frac{1}{n}=\frac{(n-1)!}{n!}$,接下来每个节点被选中的概率为：<br>$$<br>p_i=\frac{(n-1)!+\sum_{j=1}^{j=i}\frac{(n-1)!}{j}}{n!}<br>$$<br>然后进行计算即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">300000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll fac[maxn];</span><br><span class="line">ll inv[maxn];</span><br><span class="line">ll a[maxn];</span><br><span class="line"><span class="function">ll <span class="title">qp</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++) fac[i]=fac[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">    <span class="comment">// printf("ok\n");</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++) inv[i]=qp(i,mod<span class="number">-2</span>);</span><br><span class="line">    <span class="comment">// printf("ok\n");</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        ll cur=fac[n<span class="number">-1</span>];</span><br><span class="line">        ll res=a[<span class="number">0</span>]*cur%mod;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            cur=(cur+fac[n<span class="number">-1</span>]*inv[i]%mod)%mod;</span><br><span class="line">            res=(res+a[i]*cur)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        res=res*qp(fac[n],mod<span class="number">-2</span>)%mod;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6268" target="_blank" rel="noopener">E.Master of Subgraph</a></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6269" target="_blank" rel="noopener">F.Hearthrock</a></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6270" target="_blank" rel="noopener">H.Marriage</a></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6271" target="_blank" rel="noopener">I.Master of Connected Component</a></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6272" target="_blank" rel="noopener">J.Master of Matrix</a></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6273" target="_blank" rel="noopener">I.Master of GCD</a></p><p>题目大意为：初始化一个长度为$n$的全$1$数组，经过m次操作，每次操作将区间$[l,r]$内的数乘以$2$或$3$，问最终所有的数的GCD为多少。</p><p>也是签到题，对$2$，$3$分别差分即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">int</span> num1[maxn],num2[maxn];</span><br><span class="line"><span class="function">ll <span class="title">qp</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,x,l,r,m,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">        <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;l,&amp;r,&amp;x);</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">2</span>)&#123;</span><br><span class="line">                a[l]++;</span><br><span class="line">                a[r+<span class="number">1</span>]--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                b[l]++;</span><br><span class="line">                b[r+<span class="number">1</span>]--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cur2=INF,cur3=INF;</span><br><span class="line">        <span class="keyword">int</span> sum2=<span class="number">0</span>,sum3=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            sum2+=a[i]; cur2=min(cur2,sum2);</span><br><span class="line">            sum3+=b[i]; cur3=min(cur3,sum3);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,qp(<span class="number">2</span>,cur2)*qp(<span class="number">3</span>,cur3)%mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6274" target="_blank" rel="noopener">J.Master of Sequence</a></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6275" target="_blank" rel="noopener">K.Mod,Xor,and Everything</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为新的队伍训练赛，整体成绩还算满意。总结下来：算法竞赛不需要证明。（真诚.jpg）&lt;/p&gt;
    
    </summary>
    
      <category term="CCPC" scheme="https://boctorio.github.io/categories/CCPC/"/>
    
    
  </entry>
  
  <entry>
    <title>2019ICPC上海网络赛部分题解</title>
    <link href="https://boctorio.github.io/2019/09/15/2019ICPC%E4%B8%8A%E6%B5%B7%E7%BD%91%E7%BB%9C%E8%B5%9B%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>https://boctorio.github.io/2019/09/15/2019ICPC上海网络赛部分题解/</id>
    <published>2019-09-15T09:49:54.000Z</published>
    <updated>2019-10-01T12:46:09.449Z</updated>
    
    <content type="html"><![CDATA[<p>终于又打进去了一个名额。</p><a id="more"></a><p><a href="https://nanti.jisuanke.com/t/41398" target="_blank" rel="noopener">A.Lighting Rounting I</a></p><p><a href="https://nanti.jisuanke.com/t/41399" target="_blank" rel="noopener">B.Light blubs</a></p><p>题目大意为：给你$n$个$0$到$n-1$编号的灯初始全部是灭的。给你$m$次操作，每次操作将$[l,r]$区间内的灯转置，问在$m$次操作后还有几盏灯是亮的。</p><p>由于数据范围的问题，我刚开始还直接按照差分前缀和去做，然后TLE了。<br>这个题如果我们观察的话，对于一个区间$[l,r]$，可以将$[0,n-1]$分成三个区间:$[0,l-1]$,$[l,r]$,$[r+1,n-1]$，能够看出每个区间的开头元素为$[0,l,r+1]$,$0$不用管，因此灯泡反转的位置即为$l,r+1$,总共有$m$次操作，因此灯泡一共反转$2*m$次，所以我们将这$2*m$个数保存起来然后从小到大排序统计每个区间有几个灯泡是亮的即可。复杂度为O(T*m)。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="comment">// bitset&lt;maxn&gt;bits;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,tag;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i.x&lt;j.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T,n,m,l,r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=T;t++)&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;a[cnt].x,&amp;a[cnt+<span class="number">1</span>].x);</span><br><span class="line">            a[cnt++].tag=<span class="number">0</span>;</span><br><span class="line">            a[cnt].x++;</span><br><span class="line">            a[cnt++].tag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a+<span class="number">1</span>,a+cnt,cmp);</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>,cur=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;cnt;i++)&#123;</span><br><span class="line">            res+=cur*(a[i].x-a[i<span class="number">-1</span>].x);</span><br><span class="line">            cur^=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>,t,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41400" target="_blank" rel="noopener">C.Tirple</a></p><p>题目大意为：给你三个大小为$n$的集合，每个集合中的数字表示长度为$a_i$的木棍，问从这三个集合中各任意挑出一根木棍，这三根木棍恰好拼成一个三角形的方案数有多少。</p><p><strong>FFT</strong>入门题目，题目类似于<a href="http://acm.hdu.edu.cn/showproblem.php?pid=4609" target="_blank" rel="noopener">HDU4609</a> 。<br>分两种情况讨论：当$n$小于等于1000时，我们可以直接$n^2$暴力求解；当$n$大于1000时，我们使用<strong>FFT</strong> 去求解：<br>首先我们找出三个集合每个的<strong>FFT</strong> ，然后对这三个数组两两求<strong>IFFT</strong>,这样我们就能求出两个集合的组合情况。我们假设从第三个集合的取出的为最长的一条边，那么我们就可以删掉不符合条件的方案，即$\sum c[i]*sum[i]$ ，其中$c[i]$为枚举的第三条边，$sum[i]$为小于$c[i]$的方案数。因为总的方案数为$n^3$，因此总方案数减去不符合的方案数即为最终的方案数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">400000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cpx</span>&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    cpx <span class="keyword">friend</span> <span class="keyword">operator</span>*(cpx i,cpx j)&#123;<span class="keyword">return</span> &#123;i.x*j.x-i.y*j.y,i.x*j.y+i.y*j.x&#125;;&#125;</span><br><span class="line">    cpx <span class="keyword">friend</span> <span class="keyword">operator</span>+(cpx i,cpx j)&#123;<span class="keyword">return</span> &#123;i.x+j.x,i.y+j.y&#125;;&#125;</span><br><span class="line">    cpx <span class="keyword">friend</span> <span class="keyword">operator</span>-(cpx i,cpx j)&#123;<span class="keyword">return</span> &#123;i.x-j.x,i.y-j.y&#125;;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">ll r[maxn];</span><br><span class="line">ll a[maxn],b[maxn],c[maxn];</span><br><span class="line">ll sa[maxn],sb[maxn],sc[maxn];</span><br><span class="line">cpx la[maxn],lb[maxn],lc[maxn],q[maxn];</span><br><span class="line">ll n,ans,limit=<span class="number">1</span>&lt;&lt;<span class="number">18</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> limit,<span class="keyword">int</span> bit_len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;limit;i++) r[i]=(r[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(bit_len<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(cpx* a,<span class="keyword">int</span> limit,<span class="keyword">int</span> flag)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;limit;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;r[i])&#123;</span><br><span class="line">            swap(a[i],a[r[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;limit;i&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">        cpx part&#123;cos(pi/i),flag*sin(pi/i)&#125;;</span><br><span class="line">        <span class="keyword">int</span> R=i&lt;&lt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;limit;j+=R)&#123;</span><br><span class="line">            cpx w&#123;<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;i;k++,w=w*part)&#123;</span><br><span class="line">                cpx x=a[j+k];</span><br><span class="line">                cpx y=w*a[j+i+k];</span><br><span class="line">                a[j+k]=x+y;</span><br><span class="line">                a[j+i+k]=x-y;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;limit;i++)&#123;</span><br><span class="line">            a[i].x/=limit;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            sa[b[i]+c[j]]++;</span><br><span class="line">            sb[a[i]+c[j]]++;</span><br><span class="line">            sc[a[i]+b[j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100000</span>;i++)&#123;</span><br><span class="line">        sa[i]+=sa[i<span class="number">-1</span>];</span><br><span class="line">        sb[i]+=sb[i<span class="number">-1</span>];</span><br><span class="line">        sc[i]+=sc[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        ans-=sa[a[i]<span class="number">-1</span>]+sb[b[i]<span class="number">-1</span>]+sc[c[i]<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">count</span><span class="params">(cpx *a,cpx *b,ll *c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;limit;i++) q[i]=a[i]*b[i];</span><br><span class="line">    fft(q,limit,<span class="number">-1</span>);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">100000</span>;i++)&#123;</span><br><span class="line">        ans-=sum*c[i];</span><br><span class="line">        sum+=(ll)(q[i].x+<span class="number">0.5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        sa[a[i]]++;</span><br><span class="line">        sb[b[i]]++;</span><br><span class="line">        sc[c[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;limit;i++)&#123;</span><br><span class="line">        la[i]=cpx&#123;sa[i],<span class="number">0</span>&#125;;</span><br><span class="line">        lb[i]=cpx&#123;sb[i],<span class="number">0</span>&#125;;</span><br><span class="line">        lc[i]=cpx&#123;sc[i],<span class="number">0</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    fft(la,limit,<span class="number">1</span>);</span><br><span class="line">    fft(lb,limit,<span class="number">1</span>);</span><br><span class="line">    fft(lc,limit,<span class="number">1</span>);</span><br><span class="line">    count(la,lb,sc);</span><br><span class="line">    count(lb,lc,sa);</span><br><span class="line">    count(la,lc,sb);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init(limit,<span class="number">18</span>);</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=T;t++)&#123;</span><br><span class="line">        ll x;</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">        <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">        <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">        <span class="built_in">memset</span>(sa,<span class="number">0</span>,<span class="keyword">sizeof</span>(sa));</span><br><span class="line">        <span class="built_in">memset</span>(sb,<span class="number">0</span>,<span class="keyword">sizeof</span>(sb));</span><br><span class="line">        <span class="built_in">memset</span>(sc,<span class="number">0</span>,<span class="keyword">sizeof</span>(sc));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">        ans=n*n*n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;b[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;c[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,t);</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">1000</span>) solve1();</span><br><span class="line">        <span class="keyword">else</span> solve2();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41412" target="_blank" rel="noopener">D.Counting Sequences I</a></p><p>题目大意为：让你找一个长度为$n(n\geq 2)$的数组，使得$a_1+a_2+…+a_n=a_1*a_2*…*a_n$，问总共有多少种这样的数组。</p><p>这个题没什么算法可言，就直接$dfs$暴力求解即可，当然不能太暴力，需要尽可能的优化，我在最后大概对于$n=3000$的数据，4秒左右能跑出来，因此直接本地打表就过了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这段代码可修改为本地打表，3000个数字大约为20~30分钟之间</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">3000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">ll res=<span class="number">0</span>;</span><br><span class="line">ll fac[maxn];</span><br><span class="line">ll inv[maxn];</span><br><span class="line"><span class="keyword">int</span> m[maxn][maxn],n,limit;</span><br><span class="line"><span class="function">ll <span class="title">qp</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3000</span>;i++) fac[i]=fac[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">    inv[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3000</span>;i++) inv[i]=qp(fac[i],mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3000</span>;i++)&#123;</span><br><span class="line">        m[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">3000</span>;j++)&#123;</span><br><span class="line">            m[i][j]=min(<span class="number">10000</span>,m[i][j<span class="number">-1</span>]*i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">int</span> num,<span class="keyword">int</span> mul,<span class="keyword">int</span> sum,ll ans)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur==n+<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mul==sum &amp;&amp; num==n) res=(res+ans)%mod;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m[cur][n-num]*mul&gt;limit) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">1</span>,maxx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(cur==<span class="number">1</span>) maxx=max(<span class="number">0</span>,n<span class="number">-12</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=maxx;i&lt;=n-num;++i)&#123;</span><br><span class="line">        dfs(cur+<span class="number">1</span>,num+i,mul,sum+i*cur,ans*inv[i]%mod);</span><br><span class="line">        mul*=cur;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        res=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        limit=n*<span class="number">2</span>;</span><br><span class="line">        dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,fac[n]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41413" target="_blank" rel="noopener">E.Counting Sequences II</a></p><p><a href="https://nanti.jisuanke.com/t/41414" target="_blank" rel="noopener">F.Rhyme scheme</a></p><p>题目大意为：给你两个数$n,k$ ，求长为$n$的大写字母字符串的第$k$个排列,$k$为$n$的贝尔数，详见<a href="https://baike.baidu.com/item/%E8%B4%9D%E5%B0%94%E6%95%B0/9227873?fr=aladdin" target="_blank" rel="noopener">贝尔数</a> 。（这些字母排列的方式并未给出，经过观察后才能得出规律为：第$i$个位置上字母不能大于前面最大的字母加一，因此只能由<strong>AAB</strong>,不能有<strong>AAC</strong>）。</p><p>当时并没有看这个题，后来才补了这个题。</p><p>这个题用动态规划可写。定义$dp[i][j][k]$表示第$i$个位置（位置从高到低）前面出现过的最大的字母是$j$的情况下，第$i$位选$[‘A’,’A’+k]$的方案数总和。然后我们就可以利用一个循环去找到每一个位置上对应的字母。状态转移方程为（分两步）：<br><strong>step1:</strong> 求第$i$位选$’A’+k$的方案数<br>$$<br>dp[i][j][k]=\sum_{x=1}^{max(j,k)+1}dp[i-1][max(j,k)][x]<br>$$<br><strong>step2</strong>:求前缀和<br>$$<br>dp[i][j][k]=\sum_{x=1}^{x=k}dp[i][j][x]<br>$$<br>由于数字过于庞大，因此我们需要使用__int128去处理数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">__int128 dp[<span class="number">30</span>][<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line">__int128 K;</span><br><span class="line"><span class="keyword">inline</span> __<span class="function">int128 <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    __int128 x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">'-'</span>) f=<span class="number">-1</span>;</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">        x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(__int128 x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">        x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>) write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">26</span>;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=min(j+<span class="number">1</span>,<span class="number">26</span>);k++)&#123;</span><br><span class="line">dp[<span class="number">1</span>][j][k]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">26</span>;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=min(j+<span class="number">1</span>,<span class="number">26</span>);k++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=min(<span class="number">26</span>,max(j+<span class="number">1</span>,k+<span class="number">1</span>));l++)&#123;</span><br><span class="line">dp[i][j][k]+=dp[i<span class="number">-1</span>][max(j,k)][l];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">26</span>;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=min(<span class="number">26</span>,j+<span class="number">1</span>);k++)&#123;</span><br><span class="line">dp[i][j][k]+=dp[i][j][k<span class="number">-1</span>];</span><br><span class="line"><span class="comment">//write(dp[i][j][k]);</span></span><br><span class="line"><span class="comment">//printf(" ");</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf("\n");</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf("\n");</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> T,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=T;t++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        K=read();</span><br><span class="line">        K--;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,t);</span><br><span class="line">        <span class="keyword">int</span> cur=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"A"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=min(cur+<span class="number">1</span>,<span class="number">26</span>);j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[i][cur][j]&lt;=K)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,<span class="string">'A'</span>+j);</span><br><span class="line">        K-=dp[i][cur][j];</span><br><span class="line">        cur=max(cur,j+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41415" target="_blank" rel="noopener">G.Substring</a></p><p><a href="https://nanti.jisuanke.com/t/41416" target="_blank" rel="noopener">H.Luhhy’s Matrix</a></p><p><a href="https://nanti.jisuanke.com/t/41419" target="_blank" rel="noopener">I.Debug</a></p><p><a href="https://nanti.jisuanke.com/t/41420" target="_blank" rel="noopener">J.Stone game</a></p><p>题目大意为：给你$n$个石头，每个石头都有一个重量。让你将石头分成两堆，使得第一堆的重量和大于等于第二堆的重量和，并且从第一堆任意取出一块石头后，第一堆的重量和小于等于第二堆的重量和。问总共有多少种分配方案。</p><p>其实就是一个背包问题，首先我们从题意中可以看出，<strong>第一堆每个石头的重量一定大于等于两堆石头的差</strong>，然后我们从大到小枚举差值（差值不会超过500），然后按照背包的方式去求解即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">ll a[N];</span><br><span class="line">ll dp[<span class="number">160000</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&gt;=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line"> sum+=a[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//枚举最小值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=sum;j&gt;=a[i];j--)&#123;</span><br><span class="line">dp[j]+=dp[j-a[i]];<span class="comment">//当前sum</span></span><br><span class="line">dp[j]%=mod;</span><br><span class="line"><span class="comment">//cout&lt;&lt;j&lt;&lt;' '&lt;&lt;dp[j]&lt;&lt;endl;</span></span><br><span class="line">ll now=j;ll ano=sum-j;</span><br><span class="line"><span class="keyword">if</span>(now&gt;=ano&amp;&amp;now-a[i]&lt;=ano)&#123;</span><br><span class="line">ans+=dp[j-a[i]];</span><br><span class="line">ans%=mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41421" target="_blank" rel="noopener">K.Peekaboo</a></p><p>题目大意为：给你三个值$a,b,c$，表示原点到$Kblack$ ,原点到$CLS(NB!!)$,$Kblack$到$CSL$的距离，且两个人都在二维坐标系的整点上，问总共有多少种方案使得他们之间的距离关系成立。</p><p>求出圆$x^2+y^2=a^2$ 和 $x^2+y^2=b^2$ 上的整点，然后直接循环判断即可。具体求解方法参见<a href="https:boctorio.com//2019/10/01/%E5%9C%86%E4%B8%8A%E6%95%B4%E7%82%B9%E4%B8%AA%E6%95%B0%E6%B1%82%E8%A7%A3%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">圆上整点个数及坐标求解方法</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pll pair<span class="meta-string">&lt;ll,ll&gt;</span></span></span><br><span class="line">ll d[<span class="number">4</span>][<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="built_in">set</span>&lt;pll&gt;st[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(ll r,ll <span class="built_in">exp</span>,ll flag)</span></span>&#123;<span class="comment">//exp代表扩大多少倍</span></span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i*i&lt;r;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll x=(ll)<span class="built_in">sqrt</span>(r-i*i);</span><br><span class="line">        <span class="keyword">if</span>(x*x+i*i==r &amp;&amp; x!=i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//负数域运算(x+i)*(x+i)</span></span><br><span class="line">            ll a=<span class="built_in">abs</span>(x*x-i*i),b=<span class="number">2</span>*x*i;</span><br><span class="line">            <span class="comment">//八个对称的点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++) st[flag].insert(&#123;d[j][<span class="number">0</span>]*a*<span class="built_in">exp</span>,d[j][<span class="number">1</span>]*b*<span class="built_in">exp</span>&#125;);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++) st[flag].insert(&#123;d[j][<span class="number">0</span>]*b*<span class="built_in">exp</span>,d[j][<span class="number">1</span>]*a*<span class="built_in">exp</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(ll r,ll flag)</span></span>&#123;</span><br><span class="line">    st[flag].clear();</span><br><span class="line">    <span class="comment">//四个数轴上的点</span></span><br><span class="line">    st[flag].insert(&#123;r,<span class="number">0l</span>l&#125;);st[flag].insert(&#123;-r,<span class="number">0l</span>l&#125;);</span><br><span class="line">    st[flag].insert(&#123;<span class="number">0l</span>l,r&#125;);st[flag].insert(&#123;<span class="number">0l</span>l,-r&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=r;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(r%i==<span class="number">0</span>)&#123;</span><br><span class="line">            divide(i,r/i,flag);</span><br><span class="line">            divide(r/i,i,flag);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">len</span><span class="params">(pll x,pll y,ll c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x.first-y.first)*(x.first-y.first)+(x.second-y.second)*(x.second-y.second)==c*c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll a,b,c,t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        solve(a,<span class="number">0</span>);</span><br><span class="line">        solve(b,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">set</span>&lt;pll&gt;::iterator it1=st[<span class="number">0</span>].begin();it1!=st[<span class="number">0</span>].end();it1++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">set</span>&lt;pll&gt;::iterator it2=st[<span class="number">1</span>].begin();it2!=st[<span class="number">1</span>].end();it2++)&#123;</span><br><span class="line">                pii x=*it1,y=*it2;</span><br><span class="line">                <span class="keyword">if</span>(len(x,y,c)) sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">set</span>&lt;pll&gt;::iterator it1=st[<span class="number">0</span>].begin();it1!=st[<span class="number">0</span>].end();it1++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">set</span>&lt;pll&gt;::iterator it2=st[<span class="number">1</span>].begin();it2!=st[<span class="number">1</span>].end();it2++)&#123;</span><br><span class="line">                pii x=*it1,y=*it2;</span><br><span class="line">                <span class="keyword">if</span>(len(x,y,c)) <span class="built_in">printf</span>(<span class="string">"%d %d %d %d\n"</span>,x.first,x.second,y.first,y.second);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41422" target="_blank" rel="noopener">I.Digit sum</a></p><p>签到题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line">ll sum[<span class="number">11</span>][N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(sum,<span class="number">0</span>,<span class="keyword">sizeof</span>(sum));</span><br><span class="line">    rep(b,<span class="number">2</span>,<span class="number">10</span>)&#123;</span><br><span class="line">        sum[b][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i,<span class="number">2</span>,<span class="number">1000000</span>)&#123;</span><br><span class="line">        rep(b,<span class="number">2</span>,<span class="number">10</span>)&#123;</span><br><span class="line">            ll now=i;</span><br><span class="line">            ll x=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(now)&#123;</span><br><span class="line">                x+=now%b;</span><br><span class="line">                now/=b;</span><br><span class="line">            &#125;</span><br><span class="line">            sum[b][i]=sum[b][i<span class="number">-1</span>]+x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,b;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> cas=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>,cas++,sum[b][n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;终于又打进去了一个名额。&lt;/p&gt;
    
    </summary>
    
      <category term="ICPC" scheme="https://boctorio.github.io/categories/ICPC/"/>
    
    
  </entry>
  
  <entry>
    <title>[BZOJ1066]蜥蜴</title>
    <link href="https://boctorio.github.io/2019/09/11/BZOJ1066-%E8%9C%A5%E8%9C%B4/"/>
    <id>https://boctorio.github.io/2019/09/11/BZOJ1066-蜥蜴/</id>
    <published>2019-09-11T07:30:54.000Z</published>
    <updated>2019-09-12T01:08:37.524Z</updated>
    
    <content type="html"><![CDATA[<p>又是一个很巧妙地网络流的题目。</p><a id="more"></a><p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1066" target="_blank" rel="noopener">题目链接</a></p><blockquote><p>　　在一个r行c列的网格地图中有一些高度不同的石柱，一些石柱上站着一些蜥蜴，你的任务是让尽量多的蜥蜴逃到边界外。 每行每列中相邻石柱的距离为1，蜥蜴的跳跃距离是d，即蜥蜴可以跳到平面距离不超过d的任何一个石柱上。石柱都不稳定，每次当蜥蜴跳跃时，所离开的石柱高度减1（如果仍然落在地图内部，则到达的石柱高度不变），如果该石柱原来高度为1，则蜥蜴离开后消失。以后其他蜥蜴不能落脚。任何时刻不能有两只蜥蜴在同一个石柱上。问最少有多少蜥蜴无法逃离。</p></blockquote><p>这个题一眼就是网络流，但又死在了建图上（太菜了）。</p><p>对于一个柱子，他有固定的高度，即网络流中边的流量，为了保证在这个点最多能够有这么多蜥蜴停留，我们就需要把一个柱子拆成两个点，将两个点的连线权值作为柱子的高度，然后从出点连向其他可跳跃到的柱子的入点。建一个超级源点，一个超级汇点，将超级源点与蜥蜴连边，将能跳出去的点与超级汇点连边，然后跑最大流即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> mp[<span class="number">30</span>][<span class="number">30</span>],mmp[<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,nxt,flow;</span><br><span class="line">&#125;e[maxn];</span><br><span class="line"><span class="keyword">int</span> head[maxn],a[<span class="number">30</span>][<span class="number">30</span>],dep[maxn],cur[maxn],vis[maxn];</span><br><span class="line"><span class="keyword">int</span> r,c,d,cnt=<span class="number">1</span>,num,res,S,T;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> <span class="number">2</span>*(x*(c+<span class="number">1</span>)+y);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[++cnt].to=v;</span><br><span class="line">    e[cnt].flow=w;</span><br><span class="line">    e[cnt].nxt=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    add(u,v,w); add(v,u,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    S=r*c*<span class="number">3</span>;</span><br><span class="line">    T=r*c*<span class="number">3</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=c;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(min(min(i,j),min(r-i+<span class="number">1</span>,c-j+<span class="number">1</span>))&lt;=d) addedge(cal(i,j)+<span class="number">1</span>,T,INF);</span><br><span class="line">            <span class="keyword">if</span>(mp[i][j]==<span class="string">'L'</span>) addedge(S,cal(i,j),<span class="number">1</span>),num++;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]) addedge(cal(i,j),cal(i,j)+<span class="number">1</span>,a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=c;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=r;k++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=c;l++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>((<span class="built_in">abs</span>(k-i)+<span class="built_in">abs</span>(l-j)&lt;=d &amp;&amp; <span class="built_in">abs</span>(k-i)+<span class="built_in">abs</span>(l-j)!=<span class="number">0</span>) || (k==i &amp;&amp; l&gt;j))&#123;</span><br><span class="line">                        addedge(cal(i,j)+<span class="number">1</span>,cal(k,l),INF);</span><br><span class="line">                        addedge(cal(k,l)+<span class="number">1</span>,cal(i,j),INF);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dep,INF,<span class="keyword">sizeof</span>(dep));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line">    dep[x]=<span class="number">0</span>;</span><br><span class="line">    que.push(x);</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=e[i].nxt)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(dep[v]==INF &amp;&amp; e[i].flow)&#123;</span><br><span class="line">                dep[v]=dep[u]+<span class="number">1</span>;</span><br><span class="line">                que.push(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dep[T]!=INF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==t) <span class="keyword">return</span> flow;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[u];i &amp;&amp; ans&lt;flow;i=e[i].nxt)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">int</span> w=e[i].flow;</span><br><span class="line">        <span class="keyword">if</span>(!vis[v] &amp;&amp; w &amp;&amp; dep[v]==dep[u]+<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> x=dfs(v,t,min(flow-ans,w));</span><br><span class="line">            <span class="keyword">if</span>(x)&#123;</span><br><span class="line">                e[i].flow-=x;</span><br><span class="line">                e[i^<span class="number">1</span>].flow+=x;</span><br><span class="line">                ans+=x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[u]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mf</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">while</span>(bfs(S))&#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(cur,head,<span class="keyword">sizeof</span>(head));</span><br><span class="line">        <span class="keyword">while</span>(x=dfs(S,T,<span class="number">1</span>)) res+=x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// freopen("1.in","r",stdin);</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;r,&amp;c,&amp;d);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,mmp[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=c;j++)&#123;</span><br><span class="line">            a[i][j]=mmp[i][j]-<span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,mp[i]+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    init();</span><br><span class="line">    mf();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num-res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又是一个很巧妙地网络流的题目。&lt;/p&gt;
    
    </summary>
    
      <category term="网络流" scheme="https://boctorio.github.io/categories/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
    
  </entry>
  
  <entry>
    <title>[BZOJ1070]修车</title>
    <link href="https://boctorio.github.io/2019/09/11/BZOJ1070-%E4%BF%AE%E8%BD%A6/"/>
    <id>https://boctorio.github.io/2019/09/11/BZOJ1070-修车/</id>
    <published>2019-09-11T03:37:48.000Z</published>
    <updated>2019-09-11T04:04:03.003Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1070" target="_blank" rel="noopener">题目链接</a></p><p>题目大意为：有$n$个人一起去洗车，洗车店有$m$个员工，给你一个$n*m$的矩阵，$a[i][j]$表示第$j$个员工洗第$i$辆车的时间，问最少的平均等待时间为多少（等待时间为从进店开始直到洗车完毕的时间）。</p><a id="more"></a><p>费用流的题目，难点就在于建图。</p><p>对于每一辆车$i$，假设它是第$j$个人洗的倒数第$k$辆车，那么之后的那$k-1$辆都需要等待$a[i][j]$的时间，加上它本身的话，那么洗这辆车的总等待时间就为$a[i][j]*k$,我们以此建图，跑一个费用流即可。</p><p>首先我们要建立一个超级源点$S$和超级汇点$T$，作为网络流的起点和终点。然后将$S$与$n*m$个节点相连，将$n$个节点与$T$相连,然后我们开始链接中间的$n*m*n$条边。对于每条边，我们要明确知道提所代表的含义（这点很重要！！！否则你建的图不可能是正确的）。<br>先看我们之前的那句话“<strong>第$j$个人倒数第$k$个洗第$i$辆车的等待时间为$a[i][j]*k$</strong>”，那么在我们新建立的$n*m+n$中，右边的$n$个节点代表每辆车；左边的$n*m$个节点代表第$j$个人洗的倒数第$k$辆车。那么我们就能建立起每条边了：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line">        <span class="comment">//id[k][j]表示左边n*m个节点的编号，也即(第j个人洗倒数第k辆车)所对应的编号</span></span><br><span class="line">        <span class="comment">//id2[i]表示右边n个节点的编号,也即第i辆车所对应的编号</span></span><br><span class="line">            <span class="comment">//两者进行结合即为上面一段的那句话</span></span><br><span class="line">            add(id[k][j],id2[i],<span class="number">1</span>,a[i][j]*k);</span><br><span class="line">            add(id2[i],id[k][j],<span class="number">0</span>,-a[i][j]*k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建完图后其他步骤和费用流一样。完整代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,nxt,cost,flow;</span><br><span class="line">&#125;e[maxn];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> id[<span class="number">100</span>][<span class="number">100</span>],id2[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> dis[maxn],vis[maxn];</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,cnt=<span class="number">1</span>,S,T,res,point=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    e[++cnt].to=v;</span><br><span class="line">    e[cnt].flow=w;</span><br><span class="line">    e[cnt].cost=c;</span><br><span class="line">    e[cnt].nxt=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    S=++point;</span><br><span class="line">    T=++point;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        add(id2[i]=++point,T,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        add(T,id2[i],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            add(S,id[i][j]=++point,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">            add(id[i][j],S,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line">                add(id[k][j],id2[i],<span class="number">1</span>,a[i][j]*k);</span><br><span class="line">                add(id2[i],id[k][j],<span class="number">0</span>,-a[i][j]*k);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(dis,INF,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line">    que.push(s);</span><br><span class="line">    dis[s]=<span class="number">0</span>;</span><br><span class="line">    vis[s]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        vis[u]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=e[i].nxt)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">            <span class="keyword">int</span> w=e[i].cost;</span><br><span class="line">            <span class="keyword">if</span>(e[i].flow &amp;&amp; dis[v]&gt;dis[u]+w)&#123;</span><br><span class="line">                dis[v]=dis[u]+w;</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">                    que.push(v);</span><br><span class="line">                    vis[v]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dis[t]!=INF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==t) <span class="keyword">return</span> flow;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[u];i &amp;&amp; ans&lt;flow;i=e[i].nxt)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].to;</span><br><span class="line">        <span class="keyword">int</span> w=e[i].cost;</span><br><span class="line">        <span class="keyword">if</span>(!vis[v] &amp;&amp; e[i].flow &amp;&amp; dis[v]==dis[u]+w)&#123;</span><br><span class="line">            <span class="keyword">int</span> x=dfs(v,t,min(flow-ans,e[i].flow));</span><br><span class="line">            <span class="keyword">if</span>(x)&#123;</span><br><span class="line">                res+=x*w;</span><br><span class="line">                e[i].flow-=x;</span><br><span class="line">                e[i^<span class="number">1</span>].flow+=x;</span><br><span class="line">                ans+=x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[u]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mcmf</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">while</span>(spfa(S,T))&#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(cur,head,<span class="keyword">sizeof</span>(head));</span><br><span class="line">        <span class="keyword">while</span>(x=dfs(S,T,<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// freopen("1.in","r",stdin);</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    init();</span><br><span class="line">    mcmf();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,<span class="number">1.0</span>*res/n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.lydsy.com/JudgeOnline/problem.php?id=1070&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题目大意为：有$n$个人一起去洗车，洗车店有$m$个员工，给你一个$n*m$的矩阵，$a[i][j]$表示第$j$个员工洗第$i$辆车的时间，问最少的平均等待时间为多少（等待时间为从进店开始直到洗车完毕的时间）。&lt;/p&gt;
    
    </summary>
    
      <category term="网络流" scheme="https://boctorio.github.io/categories/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="费用流" scheme="https://boctorio.github.io/categories/%E7%BD%91%E7%BB%9C%E6%B5%81/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
    
  </entry>
  
  <entry>
    <title>费用流</title>
    <link href="https://boctorio.github.io/2019/09/10/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    <id>https://boctorio.github.io/2019/09/10/费用流/</id>
    <published>2019-09-10T09:21:30.000Z</published>
    <updated>2019-09-10T10:41:54.102Z</updated>
    
    <content type="html"><![CDATA[<p>费用流全称为最小费用最大流，其求解的问题为：在一个图中，从一个起点到终点运输流量，每条边之间都有单位运输费用。问在最大流的情况下最小的花费是多少。</p><a id="more"></a><p>这是在网络流的基础上将边加上了权值，其求解方法与网络流类似，不过需要先用<strong>spfa</strong>去求最短路。其总的基本步骤为：<strong>建反向边（流量为0，权值为原权值）—&gt;跑spfa—&gt;跑最大流—&gt;直到求解到没有流量为止</strong>。前置知识为预先了解<a href="https://boctorio.com/2019/08/14/%E7%BD%91%E7%BB%9C%E6%B5%81/" target="_blank" rel="noopener">网络流</a>。</p><p>接下来一步一步进行说明。</p><h4 id="建反向边"><a href="#建反向边" class="headerlink" title="建反向边"></a>建反向边</h4><p>首先依然使用链式前向星来存图，只不过多了几项需要存的数据：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> lnk[maxn];<span class="comment">//链式前向星对应的边</span></span><br><span class="line"><span class="keyword">int</span> cur[maxn];<span class="comment">//复制前向星的数组</span></span><br><span class="line"><span class="keyword">int</span> ter[maxm];<span class="comment">//每条边连向的节点</span></span><br><span class="line"><span class="keyword">int</span> nxt[maxm];<span class="comment">//链式前向星下一条边</span></span><br><span class="line"><span class="keyword">int</span> cap[maxm];<span class="comment">//每条边的当前可用流量</span></span><br><span class="line"><span class="keyword">int</span> cost[maxm];<span class="comment">//每条边的单位流量费用</span></span><br><span class="line"><span class="keyword">int</span> dis[maxn];<span class="comment">//最短路</span></span><br><span class="line"><span class="keyword">int</span> ret;<span class="comment">//最小花费</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w,<span class="keyword">int</span> c)</span></span>&#123;<span class="comment">//从u到v，流量为w，费用为c</span></span><br><span class="line">    ter[++tot]=v;</span><br><span class="line">    nxt[tot]=lnk[u];</span><br><span class="line">    lnk[u]=tot;</span><br><span class="line">    cap[tot]=w;</span><br><span class="line">    cost[tot]=c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="跑spfa"><a href="#跑spfa" class="headerlink" title="跑spfa"></a>跑spfa</h4><p>跑<strong>spfa</strong>的意义在于：对于每一单位流量，我们要找到从起点到终点的最小花费，就相当于是从起点到终点的最短路，因此我们只需要跑一边最短路即可。每跑一次后都需要进行重新计算。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dis,INF,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line">    que.push(s);</span><br><span class="line">    dis[s]=<span class="number">0</span>;</span><br><span class="line">    vis[s]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        vis[u]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=lnk[u];i;i=nxt[i])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=ter[i];</span><br><span class="line">            <span class="keyword">if</span>(cap[i] &amp;&amp; dis[v]&gt;dis[u]+cost[i])&#123;<span class="comment">//单位花费即为权值</span></span><br><span class="line">                dis[v]=dis[u]+cost[i];</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">                    que.push(v);</span><br><span class="line">                    vis[v]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dis[t]!=INF;<span class="comment">//是否有解</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="跑最大流"><a href="#跑最大流" class="headerlink" title="跑最大流"></a>跑最大流</h4><p>接下来就利用求解出来的最短路的值来跑最大流。注意每次只能在求解出来的最短路上进行操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==t) <span class="keyword">return</span> flow;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[u];i&amp;&amp;ans&lt;flow;i=nxt[i])&#123;<span class="comment">//弧优化</span></span><br><span class="line">        <span class="keyword">int</span> v=ter[i];</span><br><span class="line">        <span class="comment">//没被访问过（防止跑环） 且 有流量 且 在最短路上</span></span><br><span class="line">        <span class="keyword">if</span>(!vis[v] &amp;&amp; cap[i] &amp;&amp; dis[v]==dis[u]+cost[i])&#123;</span><br><span class="line">            <span class="keyword">int</span> x=dfs(v,t,min(cap[i],flow-ans));</span><br><span class="line">            <span class="keyword">if</span>(x)&#123;</span><br><span class="line">                ret+=x*cost[i];</span><br><span class="line">                cap[i]-=x;</span><br><span class="line">                cap[i^<span class="number">1</span>]+=x;</span><br><span class="line">                ans+=x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[u]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="直到没有流量为止"><a href="#直到没有流量为止" class="headerlink" title="直到没有流量为止"></a>直到没有流量为止</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">int mcmf(int s,int t)&#123;//min cost max flow</span><br><span class="line">    int ans=0,x;</span><br><span class="line">    while(spfa(s,t))&#123;</span><br><span class="line">        memcpy(cur,lnk,sizeof(lnk));</span><br><span class="line">        while(x=dfs(s,t,INF)) ans+=x;</span><br><span class="line">    &#125;</span><br><span class="line">    return ans;//ans为最大流量</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整代码如下<a href="https://www.luogu.org/problem/P3381" target="_blank" rel="noopener">【模板】最小费用最大流</a>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">10000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm=<span class="number">100000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,tot=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> lnk[maxn];<span class="comment">//链式前向星对应的边</span></span><br><span class="line"><span class="keyword">int</span> cur[maxn];<span class="comment">//复制前向星的数组</span></span><br><span class="line"><span class="keyword">int</span> ter[maxm];<span class="comment">//每条边连向的节点</span></span><br><span class="line"><span class="keyword">int</span> nxt[maxm];<span class="comment">//链式前向星下一条边</span></span><br><span class="line"><span class="keyword">int</span> cap[maxm];<span class="comment">//每条边的当前可用流量</span></span><br><span class="line"><span class="keyword">int</span> cost[maxm];<span class="comment">//每条边的单位流量费用</span></span><br><span class="line"><span class="keyword">int</span> dis[maxn];<span class="comment">//最短路</span></span><br><span class="line"><span class="keyword">int</span> ret;<span class="comment">//最小花费</span></span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    ter[++tot]=v;</span><br><span class="line">    nxt[tot]=lnk[u];</span><br><span class="line">    lnk[u]=tot;</span><br><span class="line">    cap[tot]=w;</span><br><span class="line">    cost[tot]=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dis,INF,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line">    que.push(s);</span><br><span class="line">    dis[s]=<span class="number">0</span>;</span><br><span class="line">    vis[s]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        vis[u]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=lnk[u];i;i=nxt[i])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=ter[i];</span><br><span class="line">            <span class="keyword">if</span>(cap[i] &amp;&amp; dis[v]&gt;dis[u]+cost[i])&#123;</span><br><span class="line">                dis[v]=dis[u]+cost[i];</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">                    que.push(v);</span><br><span class="line">                    vis[v]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dis[t]!=INF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==t) <span class="keyword">return</span> flow;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[u];i&amp;&amp;ans&lt;flow;i=nxt[i])&#123;</span><br><span class="line">        <span class="keyword">int</span> v=ter[i];</span><br><span class="line">        <span class="keyword">if</span>(!vis[v] &amp;&amp; cap[i] &amp;&amp; dis[v]==dis[u]+cost[i])&#123;</span><br><span class="line">            <span class="keyword">int</span> x=dfs(v,t,min(cap[i],flow-ans));</span><br><span class="line">            <span class="keyword">if</span>(x)&#123;</span><br><span class="line">                ret+=x*cost[i];</span><br><span class="line">                cap[i]-=x;</span><br><span class="line">                cap[i^<span class="number">1</span>]+=x;</span><br><span class="line">                ans+=x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[u]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mcmf</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,x;</span><br><span class="line">    <span class="keyword">while</span>(spfa(s,t))&#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(cur,lnk,<span class="keyword">sizeof</span>(lnk));</span><br><span class="line">        <span class="keyword">while</span>(x=dfs(s,t,INF)) ans+=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s,t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;n,&amp;m,&amp;s,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> u,v,w,c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;u,&amp;v,&amp;w,&amp;c);</span><br><span class="line">        add(u,v,w,c);</span><br><span class="line">        add(v,u,<span class="number">0</span>,-c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=mcmf(s,t);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,ans,ret);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;费用流全称为最小费用最大流，其求解的问题为：在一个图中，从一个起点到终点运输流量，每条边之间都有单位运输费用。问在最大流的情况下最小的花费是多少。&lt;/p&gt;
    
    </summary>
    
      <category term="网络流" scheme="https://boctorio.github.io/categories/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
    
  </entry>
  
  <entry>
    <title>2019ICPC南昌网络赛部分题解</title>
    <link href="https://boctorio.github.io/2019/09/08/2019ICPC%E5%8D%97%E6%98%8C%E7%BD%91%E7%BB%9C%E8%B5%9B%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>https://boctorio.github.io/2019/09/08/2019ICPC南昌网络赛部分题解/</id>
    <published>2019-09-08T12:31:38.000Z</published>
    <updated>2019-09-09T01:56:10.810Z</updated>
    
    <content type="html"><![CDATA[<p>今天打得也算是不错，为学校争取到了一个名额，学校排名终于进入前100了。</p><a id="more"></a><p><a href="https://nanti.jisuanke.com/t/41348" target="_blank" rel="noopener">A.Enju With math problem</a></p><p><a href="https://nanti.jisuanke.com/t/41349" target="_blank" rel="noopener">B.Fire-fighting Hero</a></p><p>题目大意为：在一个无向有权图中，有一个消防英雄，有多个消防队，消防英雄要和消防队进行比赛，每个人的值为距离其他所有点的最短路的最大值（消防队到一个点有多个最短路取最小），由于消防英雄跑得比消防队快，所以消防英雄的值要除以一个系数$C$，问最后谁的值小谁赢，并输出这个值（如果消防英雄赢，输出除以$C$之前的值）。</p><p>跑两遍最短路即可。第一遍以消防英雄为源点跑最短路，第二遍建立一个超级源点，连接所有的消防队，然后在超级源点为起点跑最短路。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">int</span> n,m,S,K,C;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    ll dis;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(node a,node b)&#123;</span><br><span class="line">    <span class="keyword">return</span> a.dis&gt;b.dis;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>,ll&gt;&gt; G[N];</span><br><span class="line">ll dis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dij</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">    priority_queue&lt;node&gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    rep(i,<span class="number">0</span>,n) dis[i]=llINF;</span><br><span class="line">    dis[s]=<span class="number">0</span>;</span><br><span class="line">    q.push(&#123;s,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        node rt=q.top();q.pop();</span><br><span class="line">        <span class="keyword">int</span> u=rt.id;</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> V:G[u])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=V.first;</span><br><span class="line">            ll w=V.second;</span><br><span class="line">            <span class="keyword">if</span>(dis[v]&gt;dis[u]+w)&#123;</span><br><span class="line">                dis[v]=dis[u]+w;</span><br><span class="line">                q.push(&#123;v,dis[v]&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> id[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d %d"</span>,&amp;n,&amp;m,&amp;S,&amp;K,&amp;C);</span><br><span class="line">        rep(i,<span class="number">0</span>,n) G[i].clear();</span><br><span class="line">        rep(i,<span class="number">1</span>,K)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;id[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        ll w;</span><br><span class="line">        rep(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d %lld"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">            G[u].push_back(&#123;v,w&#125;);</span><br><span class="line">            G[v].push_back(&#123;u,w&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        ll ans1,ans2;</span><br><span class="line">        ans1=ans2=<span class="number">0</span>;</span><br><span class="line">        dij(S);</span><br><span class="line">        rep(i,<span class="number">1</span>,n) ans1=max(ans1,dis[i]);</span><br><span class="line">        rep(i,<span class="number">1</span>,K)&#123;</span><br><span class="line">            G[<span class="number">0</span>].push_back(&#123;id[i],<span class="number">0</span>&#125;);</span><br><span class="line">            G[id[i]].push_back(&#123;<span class="number">0</span>,<span class="number">0</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        dij(<span class="number">0</span>);</span><br><span class="line">        rep(i,<span class="number">1</span>,n) ans2=max(ans2,dis[i]);</span><br><span class="line">        <span class="keyword">if</span>(ans1&lt;=ans2*C)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;ans1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;ans2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/413450" target="_blank" rel="noopener">C.Hello 2019</a></p><p><a href="https://nanti.jisuanke.com/t/41351" target="_blank" rel="noopener">D.Interesting</a></p><p><a href="https://nanti.jisuanke.com/t/4152" target="_blank" rel="noopener">E.Magic Master</a></p><p>题目大意为：你作为一个魔术师，总共有n张牌，编号为1~n，现在你要你的观众随便说一个数字，然后开始表演魔术，取出最上面的第一张牌，然后依次将此时最上面的m张牌依次放在牌的最后，然后再取最上面的一张牌，然后再依次最上面的m张牌放在最后面…持续这个过程直到取完所有的牌，且取出的牌根据取出的顺序连续递增。问刚开始扑克牌的排列是什么样的。</p><p>直接利用队列逆向模拟即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">50000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">int</span> n,m,Q;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;n, &amp;m, &amp;Q);</span><br><span class="line">        <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">        rep(i, <span class="number">1</span>, n)    q.push(i);</span><br><span class="line">        <span class="keyword">int</span> cur = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(cur &lt;= n)&#123;</span><br><span class="line">            ans[q.front()] = cur++; q.pop();</span><br><span class="line">            rep(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">                q.push(q.front());</span><br><span class="line">                q.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(Q--)&#123;</span><br><span class="line">            <span class="keyword">int</span> k;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[k]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41353" target="_blank" rel="noopener">F.Megumi With String</a></p><p><a href="https://nanti.jisuanke.com/t/41354" target="_blank" rel="noopener">G.Pangu Separates Heaven and Earth</a></p><p>签到题，等于1输出18000，否则输出0。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll T,n;</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        read(n);</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"18000"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41355" target="_blank" rel="noopener">H.The Nth Item</a></p><p>题目大意为：给你一个数列$F[N]$,$F[0]=0$,$F[1]=1$,$F[n]=3*F[n-1]+2*F[n-2](n\geq 2)$,现在给你两个数$Q,N$，总共Q次查询，初始$N_1=N$,$A_1=F[N_1]\space mod \space 998244353$ ,$N_i=N_{i-1}\oplus A_i^2$,问$A_1 \oplus A_2 \oplus A_3 \oplus … \oplus A_Q$ 的值。</p><p>矩阵快速幂，由于有循环节，遇到循环节直接跳过即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line">ll t[<span class="number">100</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll a[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">&#125;G;</span><br><span class="line">node <span class="keyword">operator</span> *(node a,node b)&#123;</span><br><span class="line">    node res;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;j++)&#123;</span><br><span class="line">            res.a[i][j]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">2</span>;k++)&#123;</span><br><span class="line">                res.a[i][j]=(res.a[i][j]+a.a[i][k]*b.a[k][j])%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">node <span class="keyword">operator</span> *(node a,ll b)&#123;</span><br><span class="line">    node res;</span><br><span class="line">    res.a[<span class="number">0</span>][<span class="number">0</span>]=res.a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    res.a[<span class="number">0</span>][<span class="number">1</span>]=res.a[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a;</span><br><span class="line">        a=a*a;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    G.a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">3</span>;G.a[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">    G.a[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;G.a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>&lt;ll,<span class="keyword">bool</span>&gt; mmp;</span><br><span class="line">ll ans=<span class="number">0</span>,now;</span><br><span class="line">ll Q,NN;</span><br><span class="line">ll suf;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;Q&gt;&gt;NN;</span><br><span class="line">    rep(i,<span class="number">1</span>,Q)&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            now=NN;</span><br><span class="line">            <span class="keyword">if</span>(now==<span class="number">0</span>||now==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans^=t[now];</span><br><span class="line">                suf=t[now];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                G=G*(now<span class="number">-1</span>);</span><br><span class="line">                ans^=G.a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">                suf=G.a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            now^=(suf*suf);</span><br><span class="line">            <span class="keyword">if</span>(now==<span class="number">0</span>||now==<span class="number">1</span>)&#123;</span><br><span class="line">                ans^=t[now];</span><br><span class="line">                suf=t[now];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                G=G*(now<span class="number">-1</span>);</span><br><span class="line">                ans^=G.a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">                suf=G.a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mmp[now])&#123;</span><br><span class="line">            <span class="keyword">int</span> x=(i-mmp[now])*<span class="number">2</span>;</span><br><span class="line">            i=((Q-i)/x)*x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!mmp[now]) mmp[now]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41356" target="_blank" rel="noopener">I.Yukino With Subinterval</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天打得也算是不错，为学校争取到了一个名额，学校排名终于进入前100了。&lt;/p&gt;
    
    </summary>
    
      <category term="ICPC" scheme="https://boctorio.github.io/categories/ICPC/"/>
    
    
  </entry>
  
  <entry>
    <title>2019ICPC徐州网络赛部分题解</title>
    <link href="https://boctorio.github.io/2019/09/07/2019ICPC%E5%BE%90%E5%B7%9E%E7%BD%91%E8%B7%AF%E8%B5%9B%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>https://boctorio.github.io/2019/09/07/2019ICPC徐州网路赛部分题解/</id>
    <published>2019-09-07T10:42:34.000Z</published>
    <updated>2019-09-09T01:57:52.882Z</updated>
    
    <content type="html"><![CDATA[<p>其实今天成绩不怎么样，学校排名依然100+。但由于过题数量较多，打完后心里还是比较愉快的。</p><a id="more"></a><p><a href="https://nanti.jisuanke.com/t/41383" target="_blank" rel="noopener">A.Who is better?</a></p><p>中国剩余定理+斐波那契博弈，首先利用中国剩余定理算出$n$，然后使用斐波那契博弈计算胜负状态。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exgcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span>, a</span><br><span class="line">    x, y, q = exgcd(b, a % b)</span><br><span class="line">    x, y = y, (x - a // b * y)</span><br><span class="line">    <span class="keyword">return</span> x, y, q</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">put1</span><span class="params">()</span>:</span></span><br><span class="line">    n = int(input())</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">put2</span><span class="params">()</span>:</span></span><br><span class="line">    a1, r1 = map(int, input().split())</span><br><span class="line">    <span class="keyword">return</span> a1, r1</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(flag)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Tankernb!"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        arr = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">        cnt = <span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            res = arr[cnt - <span class="number">1</span>] + arr[cnt - <span class="number">2</span>]</span><br><span class="line">            <span class="keyword">if</span> ans&lt;res:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            arr.append(res)</span><br><span class="line">            cnt = cnt + <span class="number">1</span></span><br><span class="line">        flag = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> arr:</span><br><span class="line">            <span class="keyword">if</span> num == ans:</span><br><span class="line">                flag = <span class="keyword">True</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Lbnb!"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Zgxnb!"</span></span><br><span class="line">flag = <span class="keyword">False</span></span><br><span class="line">n = put1()</span><br><span class="line">a1, r1 = put2()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n - <span class="number">1</span>):</span><br><span class="line">    a2, r2 = put2()</span><br><span class="line">    r= r2 - r1</span><br><span class="line">    x, y, d = exgcd(a1, a2)</span><br><span class="line">    tmp = a2 // d</span><br><span class="line">    <span class="keyword">if</span> r% d != <span class="number">0</span>:</span><br><span class="line">        flag = <span class="keyword">True</span></span><br><span class="line">    r1 = ((x * r// d) % tmp + tmp) % tmp * a1 + r1</span><br><span class="line">    a1 = a1 * (a2 // d)</span><br><span class="line">lcm = a1</span><br><span class="line">ans = (r1 % lcm + lcm) % lcm</span><br><span class="line">print(solve(flag))</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41384" target="_blank" rel="noopener">B.so easy</a></p><p>题目大意为：给你一个长度为$n$的数组，数组内元素按顺序为$1~n$，接下来由$q$个操作，$z=1$时操作为删除$x$，$z=2$时操作为查询当前数组内$x$右边距离最近的一个数（包括其本身）。</p><p>由于b范围巨大，不能开数组去计算，因此用$map$来求解。每次删除，就将这个数链接到其下一个数，如果这个数在$map$中没出现过，就直接链接到这个数，并在$map$中加入这个数；如果出现过，就用并查集的方法继续向后找。$mp[i]$表示的是第$i$个数接下来链接到的数字。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="keyword">int</span> n,q,op,x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;n) <span class="keyword">return</span> mp[x]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(mp[x]==<span class="number">0</span>)&#123;</span><br><span class="line">        mp[x]=x;</span><br><span class="line">        <span class="keyword">return</span> mp[x];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x==mp[x]?mp[x]:mp[x]=find(mp[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;op,&amp;x);</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>) mp[x]=find(x+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,find(x));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41385" target="_blank" rel="noopener">C.Buy Watermelon</a></p><p>签到题，大于2的偶数即可分，否则不可分。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">2</span> &amp;&amp; n%<span class="number">2</span>==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41386" target="_blank" rel="noopener">D.Carneginon</a></p><p>题目大意为：你有一个字符串$T$，接下来输入n个字符串$S$，对于每个字符串$S$:</p><blockquote><p>如果$len_T&gt;len_S$ &amp;&amp; $S$是$T$的字串，输出<code>my child!</code><br>如果$len_T&gt;len_S$ &amp;&amp; $S$不是$T$的字串，输出<code>oh, child!</code><br>如果$len_T&lt;len_S$ &amp;&amp; $T$是$S$的字串，输出<code>my teacher!</code><br>如果$len_T&lt;len_S$ &amp;&amp; $T$不是$S$的字串，输出<code>senior!</code><br>如果$len_T=len_S$ &amp;&amp; $T$等于$S$，输出<code>jntm!</code><br>如果$len_T=len_S$ &amp;&amp; $T$不等于$S$，输出<code>friend!</code></p></blockquote><p>KMP暴力题，预先处理完$T$ 的$nxt[]$数组，接下来如果$len_S\leq len_T$的话，直接跑KMP，否则对$S$跑一遍KMP。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> nxt[maxn],nxt2[maxn];</span><br><span class="line"><span class="keyword">int</span> T,n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">(<span class="keyword">char</span> *B,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    j=<span class="number">0</span>;i=<span class="number">1</span>;</span><br><span class="line">    nxt[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(B[i]==B[j])&#123;</span><br><span class="line">            nxt[i++]=++j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(j) j=nxt[j<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">else</span> i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next2</span><span class="params">(<span class="keyword">char</span> *B,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    j=<span class="number">0</span>;i=<span class="number">1</span>;</span><br><span class="line">    nxt2[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(B[i]==B[j])&#123;</span><br><span class="line">            nxt2[i++]=++j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(j) j=nxt2[j<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">else</span> i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp_search</span><span class="params">(<span class="keyword">char</span>* A,<span class="keyword">char</span>* B,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    i=j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n&amp;&amp;j&lt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(A[i]==B[j]) i++,j++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(j) j=nxt[j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">else</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j==m)&#123;</span><br><span class="line">        <span class="keyword">return</span> i-m+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp_search2</span><span class="params">(<span class="keyword">char</span>* A,<span class="keyword">char</span>* B,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    i=j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n&amp;&amp;j&lt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(A[i]==B[j]) i++,j++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(j) j=nxt2[j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">else</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j==m)&#123;</span><br><span class="line">        <span class="keyword">return</span> i-m+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,t);</span><br><span class="line">    n=<span class="built_in">strlen</span>(t);</span><br><span class="line">    get_next(t,n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        <span class="keyword">int</span> m=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">if</span>(n&gt;m)&#123;</span><br><span class="line">            <span class="keyword">if</span>(kmp_search(t,s,n,m)!=<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"my child!\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"oh, child!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n==m)&#123;</span><br><span class="line">            <span class="keyword">if</span>(kmp_search(t,s,n,m)!=<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"jntm!\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"friend!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;m)&#123;</span><br><span class="line">            get_next2(s,m);</span><br><span class="line">            <span class="keyword">if</span>(kmp_search2(s,t,m,n)!=<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"my teacher!\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"senior!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41387" target="_blank" rel="noopener">E.XKC’s basketball team</a></p><p>题目大意：给你一个长度为$n$的数组以及一个数$m$，对于每个位置$i$，找到右边最远的位置$j$，使得$w_j\geq w_i+m(j\geq i)$ 。</p><p>首先我们进行离散化，将每个数所对应的位置储存在离散化后所对应的数组编号中，这样我们就能根据大小对每个数的位置进行统计，在离散化后的数组中，对于一个数$w_i$，假设我们能够找到一个数$w_j$，使得$w_j\geq w_i$,那么$w_{j+1}&gt;w_i$ ,因此我们可以用状态转移方程$pos[i]=min(pos[i],pos[i+1])$去节省查询时间。<br>接下来对于每个数，我们使用lower_bound()​函数找到第一个大于等于$w_i+m$的数的位置即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn],c[maxn];</span><br><span class="line"><span class="keyword">int</span> pos[maxn];</span><br><span class="line"><span class="keyword">int</span> ans[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        b[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b,b+n);</span><br><span class="line">    <span class="keyword">int</span> N=unique(b,b+n)-b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        c[i]=lower_bound(b,b+N,a[i])-b;</span><br><span class="line">        pos[c[i]]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=N<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--) pos[i]=max(pos[i],pos[i+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">int</span> x=lower_bound(b,b+N,a[i]+m)-b;</span><br><span class="line">        <span class="keyword">if</span>(x==N || pos[x]&lt;i) <span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>,pos[x]-i<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41388" target="_blank" rel="noopener">F.Little M’s attack plan</a></p><p><a href="https://nanti.jisuanke.com/t/41389" target="_blank" rel="noopener">G.Colorful String</a></p><p>题目大意为：给你一个字符串，求$\sum每个子回文字符串中字母的种类数$ 。</p><p>马拉车+序列自动机，使用马拉车找出以这个字符为中心最长的回文串的长度，然后利用序列自动机for一个26的循环找出26个字母中每个字母离中间这个字符最近的位置，然后进行判断统计贡献即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line">ll n;</span><br><span class="line">ll f[maxn][<span class="number">30</span>];</span><br><span class="line">ll vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Manacher</span><span class="params">(ll l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(ll i=l;i&gt;<span class="number">0</span>;i--)  </span><br><span class="line">    &#123;</span><br><span class="line">        t[<span class="number">2</span>*i]=s[i];  </span><br><span class="line">        t[<span class="number">2</span>*i+<span class="number">1</span>]=<span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[<span class="number">0</span>]=<span class="string">'$'</span>;</span><br><span class="line">    t[<span class="number">1</span>]=<span class="string">'#'</span>;</span><br><span class="line">    ll id,mx,ans;</span><br><span class="line">    id=mx=ans=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*l+<span class="number">1</span>;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(mx&gt;i) vis[i]=min(vis[<span class="number">2</span>*id-i],mx-i);    </span><br><span class="line">        <span class="keyword">else</span> vis[i]=<span class="number">1</span>;    </span><br><span class="line">        <span class="keyword">while</span>(t[i+vis[i]]==t[i-vis[i]]) vis[i]++;    </span><br><span class="line">        <span class="keyword">if</span>(mx&lt;vis[i]+i)  </span><br><span class="line">        &#123;    </span><br><span class="line">            id=i;    </span><br><span class="line">            mx=vis[i]+i;    </span><br><span class="line">        &#125;    </span><br><span class="line">        ans=max(ans,vis[i]);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">    n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(ll i=n;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(ll j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">            f[i<span class="number">-1</span>][j]=f[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        f[i<span class="number">-1</span>][s[i]-<span class="string">'a'</span>]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    Manacher(n);</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    ll pos,len,cur;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=n*<span class="number">2</span>;i++)&#123;</span><br><span class="line">        pos=(i+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>) len=(vis[i]+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> len=vis[i]/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(ll j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[pos]==<span class="string">'a'</span>+j)&#123;<span class="comment">//如果相等，长度等于贡献</span></span><br><span class="line">                res+=len;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cur=f[pos][j];</span><br><span class="line">            <span class="keyword">if</span>(cur &amp;&amp; cur&lt;=pos+len<span class="number">-1</span>)&#123;</span><br><span class="line">                res+=pos+len-cur;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41390" target="_blank" rel="noopener">H.function</a></p><p><a href="https://nanti.jisuanke.com/t/41391" target="_blank" rel="noopener">I.query</a></p><p>题目大意：给你一个$1~n$的全排列，$m$组查询，每次查询在$[l,r]$中满足$min(pi,pj)=gcd(pi,pj)(l\leq i\leq j\leq r)$的元素的对数。</p><p>首先我们可以从这个式子中看出来，满足这个式子的情况一定是一个数是另一个数的倍数。假如我们打表计算，我们可以统计出在$10^5$的范围内，满足这个条件的数对大约有1e6个左右，因此我们可以将这些数对变成二维象限内的坐标，坐标的值为$(min(pi,pj),max(pi,pj))$。<br>那么这个题就转化成了：找出二维平面以$(l,l)$为左下角坐标，$(r,r)$为右上角坐标的矩阵内的点的个数。这个我们可以用树状数组统计前缀和来求解。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r,val;</span><br><span class="line">&#125;p[maxn];</span><br><span class="line">node q[maxn];</span><br><span class="line"><span class="built_in">map</span>&lt;pii,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="keyword">int</span> tree[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i.r==j.r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i.l==j.l)&#123;</span><br><span class="line">            <span class="keyword">return</span> i.val&lt;j.val;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i.l&lt;j.l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i.r&lt;j.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> x&amp;(-x);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(;x&lt;=maxn;x+=lowbit(x)) tree[x]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querr</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;x;x-=lowbit(x)) res+=tree[x];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        a[x]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i*<span class="number">2</span>;j&lt;=n;j+=i)&#123;</span><br><span class="line">            p[sum].l=min(a[i],a[j]);</span><br><span class="line">            p[sum].r=max(a[i],a[j]);</span><br><span class="line">            p[sum++].val=<span class="number">0</span>;</span><br><span class="line">            <span class="comment">// printf("l=%d r=%d\n",min(a[i],a[j]),max(a[i],a[j]));</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;q[i].l,&amp;q[i].r);</span><br><span class="line">        <span class="keyword">int</span> l=q[i].l,r=q[i].r;</span><br><span class="line">        p[sum].l=l<span class="number">-1</span>,p[sum].r=l<span class="number">-1</span>,p[sum++].val=<span class="number">1</span>;</span><br><span class="line">        p[sum].l=l<span class="number">-1</span>,p[sum].r=r,p[sum++].val=<span class="number">1</span>;</span><br><span class="line">        p[sum].l=r,p[sum].r=l<span class="number">-1</span>,p[sum++].val=<span class="number">1</span>;</span><br><span class="line">        p[sum].l=r,p[sum].r=r,p[sum++].val=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(p,p+sum,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;sum;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i].val==<span class="number">0</span>) add(p[i].l);</span><br><span class="line">        <span class="keyword">else</span> mp[pii(p[i].l,p[i].r)]=querr(p[i].l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="comment">// printf("%d-%d-%d+%d=",mp[pii(q[i].r,q[i].r)],mp[pii(q[i].l-1,q[i].r)],mp[pii(q[i].r,q[i].l-1)],mp[pii(q[i].l-1,q[i].l-1)]);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mp[pii(q[i].r,q[i].r)]-mp[pii(q[i].l<span class="number">-1</span>,q[i].r)]-mp[pii(q[i].r,q[i].l<span class="number">-1</span>)]+mp[pii(q[i].l<span class="number">-1</span>,q[i].l<span class="number">-1</span>)]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/41392" target="_blank" rel="noopener">J.Random Access Iteartor</a></p><p><a href="https://nanti.jisuanke.com/t/41393" target="_blank" rel="noopener">K.Center</a></p><p>题目大意为：给你$n$个二维平面坐标内的点，问最少再需要几个点可以将它们变成一个中心对称图形。</p><p>中心对称图形的概念即为关于平面内某一点对称，因此我们可以直接找出以这个点为对城中心或者以两个点连成的线段的中点作为对称中心。总共约有$n^2+n=1e6$个，然后对每个点进行处理计算即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="built_in">map</span>&lt;pii,<span class="keyword">int</span>&gt;mp,mp2;</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt;vec;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">        mp2[pii(a[i].x,a[i].y)]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        mp[pii(a[i].x*<span class="number">2</span>,a[i].y*<span class="number">2</span>)]++;</span><br><span class="line">        num=max(num,mp[pii(a[i].x*<span class="number">2</span>,a[i].y*<span class="number">2</span>)]);</span><br><span class="line">        vec.push_back(pii(a[i].x*<span class="number">2</span>,a[i].y*<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">            mp[pii(a[i].x+a[j].x,a[i].y+a[j].y)]++;</span><br><span class="line">            <span class="keyword">if</span>(num&lt;mp[pii(a[i].x+a[j].x,a[i].y+a[j].y)])&#123;</span><br><span class="line">                num=mp[pii(a[i].x+a[j].x,a[i].y+a[j].y)];</span><br><span class="line">                vec.clear();</span><br><span class="line">                vec.push_back(pii(a[i].x+a[j].x,a[i].y+a[j].y));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num==mp[pii(a[i].x+a[j].x,a[i].y+a[j].y)])&#123;</span><br><span class="line">                vec.push_back(pii(a[i].x+a[j].x,a[i].y+a[j].y));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> res=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vec.size();i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=vec[i].first,y=vec[i].second;</span><br><span class="line">        <span class="keyword">int</span> cur=n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((a[j].x*<span class="number">2</span>==x &amp;&amp; a[j].y*<span class="number">2</span>==y) || (mp2[pii(x-a[j].x,y-a[j].y)])) cur--;</span><br><span class="line">        &#125;</span><br><span class="line">        res=min(res,cur);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://nanti.jisuanke.com/t/4138494" target="_blank" rel="noopener">L.Dice</a></p><p><a href="https://nanti.jisuanke.com/t/41395" target="_blank" rel="noopener">M.Longest subsequence</a></p><p>题目大意为：给你两个长分别为$n,m$的两个字符串$S,T$，问从$S$中找到的最长的字典序严格大于$T$的字串的长度最长为多长。</p><p>由于一定要严格大于，因此我们只要找到前面$i$相同，第i+1个比$T[i+1]$即可，然后取最优解。找相同前缀可以用序列自动机来处理。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> nxt[maxn][<span class="number">30</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,cnt=<span class="number">0</span>,n,m,flag;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) nxt[len][i]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">            nxt[i][j]=nxt[i+<span class="number">1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">        nxt[i][s[i]-<span class="string">'a'</span>]=i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %s %s"</span>,&amp;n,&amp;m,s,t);</span><br><span class="line">    init(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=t[cnt]-<span class="string">'a'</span>+<span class="number">1</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nxt[i][j]!=INF)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                ans=max(ans,cnt+n-nxt[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==t[cnt])&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            vec.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt==m) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vec.size()&gt;=m)&#123;</span><br><span class="line">            <span class="keyword">if</span>(vec[m<span class="number">-1</span>]==n<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,m+(n-vec[m<span class="number">-1</span>]<span class="number">-1</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(vec.size()&gt;=m&amp;&amp;vec[m<span class="number">-1</span>]!=<span class="number">-1</span>)&#123;</span><br><span class="line">        ans=max(ans,m+(n-vec[m<span class="number">-1</span>]<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实今天成绩不怎么样，学校排名依然100+。但由于过题数量较多，打完后心里还是比较愉快的。&lt;/p&gt;
    
    </summary>
    
      <category term="ICPC" scheme="https://boctorio.github.io/categories/ICPC/"/>
    
    
  </entry>
  
  <entry>
    <title>2018CCPC吉林站部分题解</title>
    <link href="https://boctorio.github.io/2019/09/06/2018CCPC%E5%90%89%E6%9E%97%E7%AB%99%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>https://boctorio.github.io/2019/09/06/2018CCPC吉林站部分题解/</id>
    <published>2019-09-06T03:25:50.000Z</published>
    <updated>2019-09-06T04:54:36.903Z</updated>
    
    <content type="html"><![CDATA[<p>前几天在刷知乎的时候看到吉老师对这套题赞誉有加，因此特来做做试试。水平有限，能力一般。</p><a id="more"></a><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6555" target="_blank" rel="noopener">A.The Fool</a></p><p>题目大意为：求$\sum_{i=1}^{n}{\frac{n}{i}}$ 的值。$(n\leq 1e9)$</p><p>这道题还算简单，直接按照$\frac{n}{i}$的值分块计算即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll t,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(ll q=<span class="number">1</span>;q&lt;=t;q++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">        ll sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;)&#123;</span><br><span class="line">            sum+=(n/i)*(n/(n/i)-i+<span class="number">1</span>);</span><br><span class="line">            i=n/(n/i)+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %lld: "</span>,q);</span><br><span class="line">        <span class="keyword">if</span>(sum&amp;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"odd\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"even\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6556" target="_blank" rel="noopener">B.The World</a></p><p>题目大意为：给你一个地区的时间，让你求另一个地区的时间。</p><p>不算很难的题目，直接模拟计算即可。细节比较多，需要多处理处理。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">30</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">int</span> cas=<span class="number">0</span>;</span><br><span class="line">    a[<span class="string">'L'</span>-<span class="string">'A'</span>]=<span class="number">0</span>;</span><br><span class="line">    a[<span class="string">'M'</span>-<span class="string">'A'</span>]=<span class="number">3</span>;</span><br><span class="line">    a[<span class="string">'W'</span>-<span class="string">'A'</span>]=<span class="number">-5</span>;</span><br><span class="line">    a[<span class="string">'B'</span>-<span class="string">'A'</span>]=<span class="number">8</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>,++cas);</span><br><span class="line">        <span class="keyword">int</span> hour=<span class="number">0</span>,minu=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;s[<span class="number">0</span>][j];j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[<span class="number">0</span>][j]==<span class="string">':'</span>)&#123;flag=<span class="number">0</span>;<span class="keyword">continue</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                hour=hour*<span class="number">10</span>+s[<span class="number">0</span>][j]-<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                minu=minu*<span class="number">10</span>+s[<span class="number">0</span>][j]-<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> x=a[s[<span class="number">3</span>][<span class="number">0</span>]-<span class="string">'A'</span>]-a[s[<span class="number">2</span>][<span class="number">0</span>]-<span class="string">'A'</span>];</span><br><span class="line">        <span class="keyword">int</span> tmp=hour;</span><br><span class="line">        <span class="keyword">if</span>(tmp==<span class="number">12</span>)tmp=<span class="number">0</span>;</span><br><span class="line">        hour=(hour+x+<span class="number">12</span>)%<span class="number">12</span>;</span><br><span class="line">        <span class="keyword">if</span>(hour==<span class="number">0</span>)hour=<span class="number">12</span>;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Today %s %s\n"</span>,s[<span class="number">0</span>],s[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp+x&lt;<span class="number">12</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Today %d:%02d %s\n"</span>,hour,minu,s[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[<span class="number">1</span>][<span class="number">0</span>]==<span class="string">'A'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(tmp+x&lt;<span class="number">24</span>)<span class="built_in">printf</span>(<span class="string">"Today %d:%02d PM\n"</span>,hour,minu);</span><br><span class="line">                    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Tomorrow %d:%02d AM\n"</span>,hour,minu);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(tmp+x==<span class="number">24</span>)<span class="built_in">printf</span>(<span class="string">"Tomorrow %d:%02d PM\n"</span>,hour,minu);</span><br><span class="line">                    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Tomorrow %d:%02d AM\n"</span>,hour,minu);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp+x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Today %d:%02d %s\n"</span>,hour,minu,s[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[<span class="number">1</span>][<span class="number">0</span>]==<span class="string">'A'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(tmp+x&gt;=<span class="number">-12</span>)<span class="built_in">printf</span>(<span class="string">"Yesterday %d:%02d PM\n"</span>,hour,minu);</span><br><span class="line">                    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Yesterday %d:%02d AM\n"</span>,hour,minu);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(tmp+<span class="number">12</span>+x&gt;=<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"Today %d:%02d AM\n"</span>,hour,minu);</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"Yesterday %d:%02d PM\n"</span>,hour,minu);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6557" target="_blank" rel="noopener">C.Justice</a></p><p>题目大意为，给你一堆数字，每个数字代表一个值$\frac{1}{2^x}$，问能否将其分成两堆，使得每堆值之和大于等于$\frac{1}{2}$ 。</p><p>一个稍微复杂一点的题目，首先我们需要判断所有数的和是否超过1，超过即有解，否则无解。若有解，则设置一个变量，作为两堆之间的差值，然后均分即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,pos;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="keyword">int</span> res[maxn];</span><br><span class="line"><span class="keyword">int</span> T,n,u;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;<span class="keyword">return</span> i.x&lt;j.x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) que.push(a[i].x);</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        <span class="keyword">if</span>(que.top()==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        x=que.top();que.pop();</span><br><span class="line">        <span class="keyword">if</span>(!que.empty())&#123;</span><br><span class="line">            y=que.top();</span><br><span class="line">            que.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(x==y) que.push(x<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">else</span> que.push(y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">if</span>(!check()) <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">        ll sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].x-a[i<span class="number">-1</span>].x&gt;<span class="number">17</span> || <span class="built_in">abs</span>(sum)&gt;=<span class="number">1e6</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;<span class="number">0</span>) sum=min(<span class="number">1e9</span>,sum*<span class="built_in">pow</span>(<span class="number">2</span>,a[i].x-a[i<span class="number">-1</span>].x));</span><br><span class="line">            <span class="keyword">else</span> sum=max(<span class="number">-1e9</span>,sum*<span class="built_in">pow</span>(<span class="number">2</span>,a[i].x-a[i<span class="number">-1</span>].x));</span><br><span class="line">            <span class="keyword">if</span>(sum&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                sum+=<span class="number">1</span>;</span><br><span class="line">                res[a[i].pos]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> sum-=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">"%d"</span>,res[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// freopen("1.in","r",stdin);</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=T;t++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i].x);</span><br><span class="line">            a[i].pos=i;</span><br><span class="line">            res[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>,t);</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6558" target="_blank" rel="noopener">D.The Moon</a></p><p>题目大意为：你在玩一个游戏，获胜的概率为p%,然后给你游戏的操作：</p><blockquote><p>step0: 初始中奖率为q=2%;<br>step1: 玩家以p%的获胜率玩一局游戏;<br>step2: 玩家获胜转到step3,否则转到step4;<br>step3: 玩家抽奖，如果没中奖，获奖率提高2%，上限100%，转到step1;<br>step4: 获奖概率提高1.5%，转到step1;</p></blockquote><p>问抽中奖时玩的游戏的局数的期望。</p><p>这个题是个比较简单的概率dp，$dp[i]$表示在获胜概率为$i\%$时的期望局数，由于1.5%不是一个整数，所以将所有的值扩大二倍，初始$dp[200]=\frac{1}{p}$然后就可以写出转移方程：<br>$$<br>dp[i]=p*(1-\frac{1}{i})*dp[min(i+4,200)]+(1-p)*dp[min(i+3,200)]+1;<br>$$<br>其中前一部分表示获胜没抽中奖的期望，后一部分表示没获胜的期望，最后需要+1表示又玩了这一局。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">double</span> dp[<span class="number">300</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=T;t++)&#123;</span><br><span class="line">        <span class="keyword">double</span> p;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;p);</span><br><span class="line">        p/=<span class="number">100</span>;</span><br><span class="line">        dp[<span class="number">200</span>]=<span class="number">1</span>/p;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">199</span>;i&gt;=<span class="number">4</span>;i--)&#123;</span><br><span class="line">            dp[i]=p*(<span class="number">1.0</span>-i/<span class="number">200.0</span>)*dp[min(<span class="number">200</span>,i+<span class="number">4</span>)]+(<span class="number">1.0</span>-p)*dp[min(<span class="number">200</span>,i+<span class="number">3</span>)]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %.10lf\n"</span>,t,dp[<span class="number">4</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6559" target="_blank" rel="noopener">E.The Tower</a></p><p>题目大意为：已知底面半径为$r$，高为$h$的圆锥，给你一个点$(x_0,y_0,z_0)$，它的速度为$(v_x,v_y,v_z)$ ，问这个点与圆锥相交的最短时间为多少。</p><p>几何题，首先知道圆锥的方程为$x^2+y^2=r^2\frac{(h-z)^2}{h^2}$ ，然后假设点与圆锥相交的点为$(x_0+v_xt,y_0+v_yt,z_0+v_zt)$，然后带入方程求解即可：<br>$$<br>x^2+y^2=r^2\frac{(h-z)^2}{h^2} \\<br>(x_0+v_xt)^2+(y_0+v_yt)^2=r^2\frac{(h-z_0-v_zt)^2}{h^2} \\<br>x_0^2+2x_0v_xt+v_x^2t^2+y_0^2+2y_0v_yt+v_y^2t^2=r^2\frac{h^2+z_0^2+v_z^2t^2-2hz_0-2hv_zt+2z_0v_zt}{h^2} \\<br>h^2x_0^2+2h^2x_0v_xt+h^2v_x^2t^2+h^2y_0^2+2h^2y_0v_yt+h^2v_y^2t^2=r^2h^2+r^2z_0^2+r^2v_z^2t^2-2r^2hz_0-2r^2hv_zt+2r^2z_0v_zt \\<br>(h^2v_x^2+h^2v_y^2-r^2v_z^2)t^2+(2h^2x_0v_x+2h^2y_0v_y+2r^2hv_z-2r^2z_0v_z)t+(h^2x_0^2+h^2y_0^2-r^2h^2-r^2z_0^2+2r^2hz_0)=0<br>$$<br>解完以后就可以按照一元二次方程组的方式进行求解。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">double</span> dp[<span class="number">300</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=T;t++)&#123;</span><br><span class="line">        <span class="keyword">double</span> r,h,x0,y0,z0,vx,vy,vz;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf %lf"</span>,&amp;r,&amp;h);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf %lf %lf"</span>,&amp;x0,&amp;y0,&amp;z0);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf %lf %lf"</span>,&amp;vx,&amp;vy,&amp;vz);</span><br><span class="line">        <span class="keyword">double</span> a=h*h*vx*vx+h*h*vy*vy-r*r*vz*vz;</span><br><span class="line">        <span class="keyword">double</span> b=<span class="number">2</span>*h*h*x0*vx+<span class="number">2</span>*h*h*y0*vy+<span class="number">2</span>*r*r*h*vz<span class="number">-2</span>*r*r*z0*vz;</span><br><span class="line">        <span class="keyword">double</span> c=h*h*x0*x0+h*h*y0*y0-r*r*h*h-r*r*z0*z0+<span class="number">2</span>*r*r*h*z0;</span><br><span class="line">        <span class="keyword">double</span> t1=(-b+<span class="built_in">sqrt</span>(b*b<span class="number">-4</span>*a*c))/(<span class="number">2.0</span>*a);</span><br><span class="line">        <span class="keyword">double</span> t2=(-b-<span class="built_in">sqrt</span>(b*b<span class="number">-4</span>*a*c))/(<span class="number">2.0</span>*a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>,t);</span><br><span class="line">        <span class="keyword">if</span>(t2&gt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,t2);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,t1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天在刷知乎的时候看到吉老师对这套题赞誉有加，因此特来做做试试。水平有限，能力一般。&lt;/p&gt;
    
    </summary>
    
      <category term="CCPC" scheme="https://boctorio.github.io/categories/CCPC/"/>
    
    
  </entry>
  
  <entry>
    <title>The beautiful values of the palace--2019ICPC南京网络赛A题</title>
    <link href="https://boctorio.github.io/2019/09/03/The-beautiful-values-of-the-palace-2019ICPC%E5%8D%97%E6%98%8C%E7%BD%91%E7%BB%9C%E8%B5%9BA%E9%A2%98/"/>
    <id>https://boctorio.github.io/2019/09/03/The-beautiful-values-of-the-palace-2019ICPC南昌网络赛A题/</id>
    <published>2019-09-03T08:26:04.000Z</published>
    <updated>2019-09-09T01:58:24.775Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/41298" target="_blank" rel="noopener">题目链接</a><br>一个比较经典的树状数组题目。<br>题目大意为:</p><blockquote><p>给你一个$n*n$的蛇形填数方阵，指定其中$m$个位置，其值更改为十进制下各位之和，其余各数不做计算。$p$次询问，每次询问一个矩阵内的所有数的总和，这个矩阵左下角坐标为$[x1,y1]$,右上角坐标为$[x2,y2]$。</p></blockquote><a id="more"></a><p>这个题的做法就是利用树状数组以及前缀和，对于一个矩阵，它的所有元素的总和为$sum[x2][y2]-sum[x2][y1-1]-sum[x1-1][y2]+sum[x1-1][y1-1]$ ,因此我们需要求出这四个坐标所对应的左下角坐标为$[1,1]$ 的矩阵的元素总和，因此，我们可以将这$4*p$个坐标和$m$个位置一起放入一个数组中，然后统一排序作计算。先按照纵坐标从小到大排序，纵坐标相同按照横坐标从小到大排序，横坐标也相同则按照位置优先，矩阵最后的原则排序然后遍历进行计算即可。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll h=<span class="number">1e7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span> ll x,y,val; &#125;v[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span> ll x1,y1,x2,y2; &#125;e[maxn];</span><br><span class="line">ll num[maxn];</span><br><span class="line">ll n,m,p;</span><br><span class="line"><span class="function">ll <span class="title">lowbit</span><span class="params">(ll x)</span></span>&#123; <span class="keyword">return</span> x&amp;(-x); &#125;</span><br><span class="line"><span class="function">ll <span class="title">cal</span><span class="params">(ll x,ll y)</span></span>&#123;<span class="comment">//计算(x,y)处的值</span></span><br><span class="line">    x=x-n/<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">    y=y-n/<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">    ll t=max(<span class="built_in">abs</span>(x),<span class="built_in">abs</span>(y));</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=y) <span class="keyword">return</span> n*n<span class="number">-4</span>*t*t<span class="number">-2</span>*t-x-y;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> n*n<span class="number">-4</span>*t*t+<span class="number">2</span>*t+x+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">bits</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        res+=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i.y==j.y)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i.x==j.x)</span><br><span class="line">            <span class="keyword">return</span> i.val&gt;j.val;</span><br><span class="line">        <span class="keyword">return</span> i.x&lt;j.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i.y&lt;j.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll x,ll q)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;maxn)&#123;</span><br><span class="line">        num[x]+=q;</span><br><span class="line">        x+=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        res+=num[x];</span><br><span class="line">        x-=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">unordered_map</span>&lt;ll,ll&gt;mp;</span><br><span class="line">        <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;n,&amp;m,&amp;p);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;v[i].x,&amp;v[i].y);</span><br><span class="line">            v[i].val=cal(v[i].x,v[i].y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;e[i].x1,&amp;e[i].y1,&amp;e[i].x2,&amp;e[i].y2);</span><br><span class="line">            v[m].x=e[i].x1<span class="number">-1</span>;v[m].y=e[i].y1<span class="number">-1</span>;v[m++].val=<span class="number">0</span>;</span><br><span class="line">            v[m].x=e[i].x1<span class="number">-1</span>;v[m].y=e[i].y2;v[m++].val=<span class="number">0</span>;</span><br><span class="line">            v[m].x=e[i].x2;v[m].y=e[i].y1<span class="number">-1</span>;v[m++].val=<span class="number">0</span>;</span><br><span class="line">            v[m].x=e[i].x2;v[m].y=e[i].y2;v[m++].val=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(v,v+m,cmp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(v[i].val) add(v[i].x,bits(v[i].val));</span><br><span class="line">            <span class="keyword">else</span> mp[v[i].x*h+v[i].y]=query(v[i].x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,mp[e[i].x2*h+e[i].y2]-mp[(e[i].x2)*h+e[i].y1<span class="number">-1</span>]-mp[(e[i].x1<span class="number">-1</span>)*h+e[i].y2]+mp[(e[i].x1<span class="number">-1</span>)*h+e[i].y1<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://nanti.jisuanke.com/t/41298&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;一个比较经典的树状数组题目。&lt;br&gt;题目大意为:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个$n*n$的蛇形填数方阵，指定其中$m$个位置，其值更改为十进制下各位之和，其余各数不做计算。$p$次询问，每次询问一个矩阵内的所有数的总和，这个矩阵左下角坐标为$[x1,y1]$,右上角坐标为$[x2,y2]$。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="树状数组" scheme="https://boctorio.github.io/categories/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
    
  </entry>
  
  <entry>
    <title>super_log--2019ICPC南京网络赛B题</title>
    <link href="https://boctorio.github.io/2019/09/01/super-log/"/>
    <id>https://boctorio.github.io/2019/09/01/super-log/</id>
    <published>2019-09-01T11:26:35.000Z</published>
    <updated>2019-09-09T02:00:29.160Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/41299" target="_blank" rel="noopener">题目链接</a><br>这道题的意思转化过来就是求$a^{a^{a^{a^{…}}}}mod \space m$(共b个a)的值。</p><a id="more"></a><p>这个题从比赛开始我就在看，一直看到比赛结束都没写出来，最后终于在晚些时候写出来了。</p><p>这道题并不是特别难的题，主要就是里面一些细节不好处理。这道题利用的算法就是欧拉定理，在求最底层的$a$的指数时，我们可以先求$a$的指数的指数，然后依次递归求每层的指数，在递归的过程中，可以利用欧拉降幂来简化指数。在这之前先需要了解以下<strong>扩展欧拉定理</strong>：<br>$$<br>a^c=\begin{cases}<br>a^{c \space mod \space \phi(m)} \space \space \space \space \space \space \space \space gcd(a,m)=1 \\<br>a^c \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space \space gcd(a,m)\neq 1,c&lt;\phi(m) \\<br>a^{c \space mod \space \phi(m)+\phi(m)} gcd(a,m)\neq 1 ,c\geq \phi(m)<br>\end{cases}<br>$$<br>由扩展欧拉定理我们就可以去递归求解了。首先要打一个欧拉函数的表，然后对于每一层，我们需要去计算它的指数是否大于$\phi(m)$,判断的方法就是暴力，然后就完了。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line">ll phi[maxn],chk[maxn],tot,pri[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getphi</span><span class="params">()</span> </span>&#123;<span class="comment">//欧拉函数打表</span></span><br><span class="line">    phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">2000000</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!chk[i]) &#123;</span><br><span class="line">            pri[++tot]=i;</span><br><span class="line">            phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=tot&amp;&amp;i*pri[j]&lt;=<span class="number">2000000</span>;j++) &#123;</span><br><span class="line">            chk[i*pri[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%pri[j]==<span class="number">0</span>) &#123;</span><br><span class="line">                phi[i*pri[j]]=phi[i]*pri[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                phi[i*pri[j]]=phi[i]*(pri[j]<span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">qp</span><span class="params">(ll a,ll b,ll mod)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll a,ll b,ll m)</span> </span>&#123;<span class="comment">//检查是否需要对指数进行添加</span></span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>&gt;=m;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">1</span>) <span class="keyword">return</span> a&gt;=m;</span><br><span class="line">    ll q=a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;b<span class="number">-1</span>;i++)&#123;<span class="comment">//这里暴力判断是否大于phi[m]</span></span><br><span class="line">        ll x=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;a;j++)&#123;</span><br><span class="line">            x*=q;</span><br><span class="line">            <span class="keyword">if</span>(x&gt;=m) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        q=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll a,ll b,ll m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//特判三种情况</span></span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">1</span>) <span class="keyword">return</span> a%m;</span><br><span class="line">    <span class="comment">//递归求解</span></span><br><span class="line">    <span class="keyword">if</span>(check(a,b<span class="number">-1</span>,phi[m])) <span class="keyword">return</span> qp(a,dfs(a,b<span class="number">-1</span>,phi[m])+phi[m],m);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> qp(a,dfs(a,b<span class="number">-1</span>,phi[m]),m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    getphi();</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        ll a,b,m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;a,&amp;b,&amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dfs(a,b,m)%m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://nanti.jisuanke.com/t/41299&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;这道题的意思转化过来就是求$a^{a^{a^{a^{…}}}}mod \space m$(共b个a)的值。&lt;/p&gt;
    
    </summary>
    
      <category term="欧拉函数" scheme="https://boctorio.github.io/categories/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Next 添加相册</title>
    <link href="https://boctorio.github.io/2019/08/27/Hexo-Next-%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/"/>
    <id>https://boctorio.github.io/2019/08/27/Hexo-Next-添加相册/</id>
    <published>2019-08-27T04:26:28.000Z</published>
    <updated>2019-08-27T05:43:53.721Z</updated>
    
    <content type="html"><![CDATA[<p>此教程以Github为图库添加相册。</p><a id="more"></a><h3 id="创建图片仓库-处理图片"><a href="#创建图片仓库-处理图片" class="headerlink" title="创建图片仓库+处理图片"></a>创建图片仓库+处理图片</h3><h4 id="创建图片仓库"><a href="#创建图片仓库" class="headerlink" title="创建图片仓库"></a>创建图片仓库</h4><p>在本地任意位置创建一个文件夹用来储存图片。在文件夹下创建两个文件夹<strong>photos,min_photos​</strong>,将需要上传的图片放在<strong>photos</strong>文件夹下，图片命名方式为<strong>yyyy-mm-dd_name.jpg/png/…</strong>。</p><p>在<strong>github</strong>上创建一个新的仓库，名字任意。</p><p>打开<strong>git</strong>，<strong>cd</strong>至此文件夹，执行命令上传至仓库：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init https:<span class="comment">//yourgithublink</span></span><br></pre></td></tr></table></figure><h4 id="处理图片"><a href="#处理图片" class="headerlink" title="处理图片"></a>处理图片</h4><p>下载脚本<a href="https://github.com/boctorio/photo_hub/blob/master/tool.py" target="_blank" rel="noopener">tool.py</a>文件至此文件内，此文件需要<a href="https://github.com/boctorio/photo_hub/blob/master/ImageProcess.py" target="_blank" rel="noopener">Imageprocessing.py</a>文件的支持，<strong>tool.py</strong> 中第134行左右的链接更改为接下来要创建的文件夹的地址.</p><p>执行<strong>tool.py</strong>的时候如果没有<strong>PIL</strong>库的话会报错，安装即可。安装<strong>PIL</strong>只需在<strong>cmd</strong>中执行：<code>pip install Pillow</code>就可以了。</p><p>此外图片命名方式需要按照特定方式即：<strong>2017-02-02_discriptionofyourpic.jpg</strong>，图片的格式支持常见格式，时间和描述之间存在下划线。</p><h3 id="添加博客相册界面"><a href="#添加博客相册界面" class="headerlink" title="添加博客相册界面"></a>添加博客相册界面</h3><p>git 执行命令</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page photos</span><br></pre></td></tr></table></figure><p>在主题目录<strong>_config.yml</strong> 中添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  photos: /photos/ || camera</span><br></pre></td></tr></table></figure><p>在<strong>photos</strong>文件夹下的<strong>index.md</strong>中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 照片</span><br><span class="line">date: 2018-09-02 21:00:00</span><br><span class="line">type: photos</span><br><span class="line">fancybox: false</span><br><span class="line">comments: true</span><br><span class="line">---</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;./ins.css&quot;&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;./photoswipe.css&quot;&gt; </span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;./default-skin/default-skin.css&quot;&gt; </span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;photos-btn-wrap&quot;&gt;</span><br><span class="line">  &lt;a class=&quot;photos-btn active&quot; href=&quot;javascript:void(0)&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Photos&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;instagram itemscope&quot;&gt;</span><br><span class="line">  &lt;a href=&quot;https://boctorio.com&quot; target=&quot;_blank&quot; class=&quot;open-ins&quot;&gt;图片正在加载中…&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  (function() &#123;</span><br><span class="line">    var loadScript = function(path) &#123;</span><br><span class="line">      var $script = document.createElement(&apos;script&apos;)</span><br><span class="line">      document.getElementsByTagName(&apos;body&apos;)[0].appendChild($script)</span><br><span class="line">      $script.setAttribute(&apos;src&apos;, path)</span><br><span class="line">    &#125;</span><br><span class="line">    setTimeout(function() &#123;</span><br><span class="line">        loadScript(&apos;./ins.js&apos;)</span><br><span class="line">    &#125;, 0)</span><br><span class="line">  &#125;)()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在<strong>photos</strong>文件夹中添加下列文件<a href="https://github.com/boctorio/boctorio.github.io/tree/master/photos" target="_blank" rel="noopener">photos</a></p><p>其中<strong>ins.js</strong> 中第122行左右两个链接要更改为你的图片链接，注意链接开头一定要为https: //raw.githubusercontent.com 的形式，检查链接是否正确的方法就是将图片链接放在浏览器上看是否打开。</p><p>将<a href="https://github.com/boctorio/boctorio.github.io/blob/master/js/src/photoswipe.min.js" target="_blank" rel="noopener">photoswipe.min.js</a> ,<a href="https://github.com/boctorio/boctorio.github.io/blob/master/js/src/photoswipe-ui-default.min.js" target="_blank" rel="noopener">photoswipe-ui-default.min.js</a> 两个文件加入到themes/next/source/js/src中</p><p>接下来需要将刚才下载好的文件进行引用，在next/layout/_layout.swig的​head中引用<strong>js</strong>文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for(theme.js) &#125;&#125;/src/photoswipe.min.js?v=&#123;&#123; theme.version &#125;&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for(theme.js) &#125;&#125;/src/photoswipe-ui-default.min.js?v=&#123;&#123; theme.version &#125;&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<strong>body</strong>中添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.type === "photos" %&#125;</span><br><span class="line">  <span class="comment">&lt;!-- Root element of PhotoSwipe. Must have class pswp. --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__scroll-wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__ui pswp__ui--hidden"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__top-bar"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__counter"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--close"</span> <span class="attr">title</span>=<span class="string">"Close (Esc)"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--share"</span> <span class="attr">title</span>=<span class="string">"Share"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--fs"</span> <span class="attr">title</span>=<span class="string">"Toggle fullscreen"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--zoom"</span> <span class="attr">title</span>=<span class="string">"Zoom in/out"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- element will get class pswp__preloader--active when preloader is running --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__preloader"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__preloader__icn"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__preloader__cut"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__preloader__donut"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__share-modal pswp__share-modal--hidden pswp__single-tap"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__share-tooltip"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--arrow--left"</span> <span class="attr">title</span>=<span class="string">"Previous (arrow left)"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--arrow--right"</span> <span class="attr">title</span>=<span class="string">"Next (arrow right)"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__caption"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__caption__center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在/themes/next/layout/_scripts/pages/post-details.swig中添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for(theme.js) &#125;&#125;/src/photoswipe.min.js?v=&#123;&#123; theme.version &#125;&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for(theme.js) &#125;&#125;/src/photoswipe-ui-default.min.js?v=&#123;&#123; theme.version &#125;&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样相册就完成了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此教程以Github为图库添加相册。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://boctorio.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>二次剩余</title>
    <link href="https://boctorio.github.io/2019/08/16/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/"/>
    <id>https://boctorio.github.io/2019/08/16/二次剩余/</id>
    <published>2019-08-16T01:04:46.000Z</published>
    <updated>2019-08-16T12:49:56.383Z</updated>
    
    <content type="html"><![CDATA[<p>二次剩余（<strong>Quadratic residue</strong>）是数论基本概念之一。它是初等数论中非常重要的结果，不仅可用来判断二次同余式是否有解，还有很多用途。</p><a id="more"></a><p>二次剩余的定义为：</p><blockquote><p>当存在某个整数 $x$ ，使得式子$x^2\space \equiv d \space (mod\space p)$ 成立时，称“$d$是模$p$的二次剩余”。<br>当对任意 $x$ 均不成立时，称“$d$是模$p$的二次非剩余”。</p></blockquote><h3 id="二次剩余"><a href="#二次剩余" class="headerlink" title="二次剩余"></a>二次剩余</h3><h4 id="二次剩余个数"><a href="#二次剩余个数" class="headerlink" title="二次剩余个数"></a>二次剩余个数</h4><p>这是一个二次剩余的基本概念：</p><blockquote><p>关于 $n$ 的二次剩余个数不会超过 $(n+1)/2$ ,因为$(a^2 \equiv (n-a)^2 \space mod \space n)$。</p></blockquote><p>接下来我们先讨论质数的二次剩余</p><h4 id="质数二次剩余"><a href="#质数二次剩余" class="headerlink" title="质数二次剩余"></a>质数二次剩余</h4><p>对于质数2，所有的数均为它的二次剩余。</p><p>以下讨论p为奇质数的情况：</p><p>每一个奇质数都有$(p+1)/2$ 个二次剩余，有 $(p-1)/2$ 个二次非剩余，其二次剩余非别为：<br>$$<br>0^2,1^2,\cdots ,(\frac{p-1}{2}-1)^2,(\frac{p-1}{2})^2<br>$$<br>证明过程如下：</p><blockquote><p>假设$a,b(0 \leq a &lt; b \leq \frac{p-1}{2})$ ,$a^2 \equiv b^2 \equiv x \space mod \space p$, $c=a-b$.则：<br>$$<br>b^2 \equiv (a+c)^2 \equiv a^2+2ac+c^2 \space mod \space p \\<br>\because a^2 \equiv x \space mod \space p \\<br>\therefore 2ac+c^2 \equiv 0 \space mod \space p \\<br>c(2a+c) \equiv 0 \space mod \space p \\<br>c(a+b) \equiv 0 \space mod \space p \\<br>\because a+b&lt;p ,c&lt;p \\<br>\therefore c(a+b) \equiv 0 \space mod \space p 不成立 \\<br>\therefore a^2 \equiv b^2 \equiv x \space mod \space p 不成立\\<br>$$</p></blockquote><p>这样就可以证明上面$\frac{p+1}{2}$ 个二次剩余均不相同，且一定将所有的二次剩余全部枚举出来了。</p><h4 id="二次剩余判断"><a href="#二次剩余判断" class="headerlink" title="二次剩余判断"></a>二次剩余判断</h4><p>对于一个数d是不是奇质数p的二次剩余，可以用欧拉准则来判断。</p><p>欧拉准则在此处的应用为：</p><blockquote><p>如果$d^{\frac{p-1}{2}} \equiv 1 \space mod \space p$  ,则$d$是$p$的二次剩余；<br>如果$d^{\frac{p-1}{2}} \equiv -1 \space mod \space p$，则$d$是$p$的二次非剩余。</p></blockquote><p>（具体证明我也不会）</p><h4 id="二次剩余反推"><a href="#二次剩余反推" class="headerlink" title="二次剩余反推"></a><strong>二次剩余反推</strong></h4><p>对于式子$x^2\space \equiv d \space (mod\space p)$ ，已知$d,p$,如何求$x$ ？</p><p>具体过程为：</p><blockquote><ol><li><p>随机一个整数 $t(1\leq t &lt;p)$ ，使得 $t^2-d$ 是 $p$ 的二次非剩余，由于二次剩余个数和二次非剩余个数五五开，因此求解出来 $t$ 的期望次数很少。</p></li><li><p>令$\omega=\sqrt{t^2-d}$ ,则$x={(t+\sqrt{\omega})}^{\frac{p+1}{2}}$ 。</p></li></ol></blockquote><p>证明如下：</p><blockquote><p>对于$(t+\sqrt{\omega})^p$ ,当p为奇素数，根据二项式定理$(t+\sqrt{\omega})^p \equiv (t^p+\sqrt{\omega} ^p) \space mod \space p$ ,根据费马小定理，$t^p \equiv t \space mod \space p$，根据之前的判断方法，可知$\omega^\frac{p-1}{2} \equiv -1 \space mod \space p$, 所以$\sqrt{\omega}^p \equiv\omega^{\frac{p-1}{2}}*\sqrt{\omega} \equiv -\sqrt{\omega} \space mod \space p$ ，因此$(t+\sqrt{\omega})^p \equiv (t-\sqrt{\omega}) \space mod \space p$。<br>此时：<br>$$<br>(t+\sqrt{\omega})^{p+1} \equiv (t-\sqrt{\omega})(t+\sqrt{\omega}) \\<br>\equiv t^2-\omega \\<br>\space \space \space \equiv d \space mod \space p<br>$$<br>即：<br>$$<br>x^2 \equiv (t+\sqrt{\omega})^{p+1} \space mod \space p \\<br>x \equiv (t+\sqrt{\omega})^{\frac{p+1}{2}} \space mod \space p<br>$$</p></blockquote><p>但是可以发现的一点是，$\omega^{p-1}\equiv (\sqrt{t^2-d})^{p-1}\equiv (t^2-d)^{\frac{p-1}{2}} \equiv -1 \space mod \space p$  ,$\omega^p\equiv -\omega \space mod \space p$ ,这在实数域是不能实现的，换句话说，$\omega$ 是复数域的一个值。因此我们不能用实数的方法去求解，需要利用复数来求解（口胡过去了，我其实也不会写，以后慢慢填坑）。</p><p>代码实现（返回较小的解）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">pow</span><span class="params">(ll x,ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    x%=mod;</span><br><span class="line">    <span class="keyword">for</span>(;y;y&gt;&gt;=<span class="number">1</span>,x=x*x%mod)<span class="keyword">if</span>(y&amp;<span class="number">1</span>)res=res*x%mod;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Quadratic_residue</span><span class="params">(<span class="keyword">const</span> ll d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(d==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    ll b=(rand()&lt;&lt;<span class="number">14</span>^rand())%mod;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">pow</span>(b,(mod<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>)!=mod<span class="number">-1</span>)b=(rand()&lt;&lt;<span class="number">14</span>^rand())%mod;</span><br><span class="line">    </span><br><span class="line">    ll s=mod<span class="number">-1</span>,t=<span class="number">0</span>,x,inv=<span class="built_in">pow</span>(d,mod<span class="number">-2</span>),f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!(s&amp;<span class="number">1</span>))s&gt;&gt;=<span class="number">1</span>,t++,f&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    t--,x=<span class="built_in">pow</span>(d,(s+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>),f&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        f&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">pow</span>((inv*x%mod*x%mod),f)!=<span class="number">1</span>)x=x*<span class="built_in">pow</span>(b,s)%mod;</span><br><span class="line">        t--,s&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(x,mod-x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二次剩余（&lt;strong&gt;Quadratic residue&lt;/strong&gt;）是数论基本概念之一。它是初等数论中非常重要的结果，不仅可用来判断二次同余式是否有解，还有很多用途。&lt;/p&gt;
    
    </summary>
    
      <category term="数论" scheme="https://boctorio.github.io/categories/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="二次剩余" scheme="https://boctorio.github.io/categories/%E6%95%B0%E8%AE%BA/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/"/>
    
    
  </entry>
  
  <entry>
    <title>Quadratic equation--2019牛客暑期多校训练营(第九场)-B题</title>
    <link href="https://boctorio.github.io/2019/08/16/Quadratic-equation-2019%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%B9%9D%E5%9C%BA-B%E9%A2%98/"/>
    <id>https://boctorio.github.io/2019/08/16/Quadratic-equation-2019牛客暑期多校训练营-第九场-B题/</id>
    <published>2019-08-16T00:28:11.000Z</published>
    <updated>2019-08-16T01:09:58.241Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/889/B" target="_blank" rel="noopener">题目链接（暂未开放）</a></p><p>题目大意为：</p><blockquote><p>给你一个数 $p=1e9+7$ ,以及两个式子$(x+y)\space mod \space p=b$,$(x*y)\space mod \space p=c$,给你 $b,c$ 的值$(0 \leq b,c &lt; p)$，求出满足条件的$x,y$ 的值$(0\leq x \leq y &lt; p)$，如果不存在，则输出 “-1 -1”。</p><a id="more"></a><p>样例输入：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">10</span></span><br><span class="line">&gt; <span class="number">4</span> <span class="number">4</span></span><br><span class="line">&gt; <span class="number">5</span> <span class="number">6</span></span><br><span class="line">&gt; <span class="number">10</span> <span class="number">10</span></span><br><span class="line">&gt; <span class="number">10</span> <span class="number">25</span></span><br><span class="line">&gt; <span class="number">20000</span> <span class="number">100000000</span></span><br><span class="line">&gt; <span class="number">0</span> <span class="number">5</span></span><br><span class="line">&gt; <span class="number">3</span> <span class="number">6</span></span><br><span class="line">&gt; <span class="number">220</span> <span class="number">284</span></span><br><span class="line">&gt; <span class="number">0</span> <span class="number">1</span></span><br><span class="line">&gt; <span class="number">1000000000</span> <span class="number">1000000000</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>样例输出：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">2</span> <span class="number">2</span></span><br><span class="line">&gt; <span class="number">2</span> <span class="number">3</span></span><br><span class="line">&gt; <span class="number">-1</span> <span class="number">-1</span></span><br><span class="line">&gt; <span class="number">5</span> <span class="number">5</span></span><br><span class="line">&gt; <span class="number">10000</span> <span class="number">10000</span></span><br><span class="line">&gt; <span class="number">474848249</span> <span class="number">525151758</span></span><br><span class="line">&gt; <span class="number">352077071</span> <span class="number">647922939</span></span><br><span class="line">&gt; <span class="number">448762649</span> <span class="number">551237578</span></span><br><span class="line">&gt; <span class="number">-1</span> <span class="number">-1</span></span><br><span class="line">&gt; <span class="number">366417496</span> <span class="number">633582504</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>又是一个奇妙的数学问题。对于题上的两个式子，我们可以通过化简得出：<br>$$<br>(x+y)^2\space mod \space p=b^2\space mod\space p\\<br>(x-y)^2\space mod \space p=((x+y)^2-4(x*y))\space mod \space p=(b^2-4c)\space mod \space p<br>$$<br>这样，我们只要计算出$x-y$的值，又已知$x+y$的值，就能计算出$x,y$的值。假设$x-y=a$,现在的问题为：</p><blockquote><p>已知 $a^2\space mod\space p=n$ , 已知 $p,n$ ,求 $a$ 的值。</p></blockquote><p>这个问题可以用<a href="">二次剩余来做</a>。<br>求解出来 $x-y$ 的值之后，这个问题就基本解决了。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1000000000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function">ll <span class="title">qp</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">pow</span><span class="params">(ll x,T y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    x%=mod;</span><br><span class="line">    <span class="keyword">for</span>(;y;y&gt;&gt;=<span class="number">1</span>,x=(ll)x*x%mod)<span class="keyword">if</span>(y&amp;<span class="number">1</span>)res=(ll)res*x%mod;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Quadratic_residue</span><span class="params">(<span class="keyword">const</span> ll a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll b=(rand()&lt;&lt;<span class="number">14</span>^rand())%mod;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">pow</span>(b,(mod<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>)!=mod<span class="number">-1</span>)b=(rand()&lt;&lt;<span class="number">14</span>^rand())%mod;</span><br><span class="line">    ll s=mod<span class="number">-1</span>,t=<span class="number">0</span>,x,inv=<span class="built_in">pow</span>(a,mod<span class="number">-2</span>),f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!(s&amp;<span class="number">1</span>))s&gt;&gt;=<span class="number">1</span>,t++,f&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    t--,x=<span class="built_in">pow</span>(a,(s+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>),f&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        f&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">pow</span>((inv*x%mod*x%mod),f)!=<span class="number">1</span>)x=x*<span class="built_in">pow</span>(b,s)%mod;</span><br><span class="line">        t--,s&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(x,mod-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll a,ll b,ll c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((a+b)&amp;<span class="number">1</span>) b+=mod;<span class="comment">//校正，在计算x,y的过程中就可以看出来</span></span><br><span class="line">    <span class="keyword">if</span>(b&lt;a) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    ll x=(a+b)/<span class="number">2</span>,y=(b-a)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(b&gt;=mod) b-=mod;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;y) swap(x,y);</span><br><span class="line">    <span class="keyword">if</span>((x+y)%mod==b &amp;&amp; x*y%mod==c &amp;&amp; x&lt;mod &amp;&amp; y&lt;mod)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,x,y);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll t,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;b,&amp;c);</span><br><span class="line">        ll x=((b*b<span class="number">-4</span>*c)%mod+mod)%mod;</span><br><span class="line">        <span class="keyword">if</span>(qp(x,(mod<span class="number">-1</span>)/<span class="number">2</span>)==<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"-1 -1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ll a=Quadratic_residue(x);<span class="comment">//计算出来的值有两个a,p-a(两者结果相等)</span></span><br><span class="line">            <span class="keyword">if</span>(check(a,b,c)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(check(mod-a,b,c)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1 -1\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/889/B&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接（暂未开放）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题目大意为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个数 $p=1e9+7$ ,以及两个式子$(x+y)\space mod \space p=b$,$(x*y)\space mod \space p=c$,给你 $b,c$ 的值$(0 \leq b,c &amp;lt; p)$，求出满足条件的$x,y$ 的值$(0\leq x \leq y &amp;lt; p)$，如果不存在，则输出 “-1 -1”。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数论" scheme="https://boctorio.github.io/categories/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="二次剩余" scheme="https://boctorio.github.io/categories/%E6%95%B0%E8%AE%BA/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/"/>
    
    
  </entry>
  
  <entry>
    <title>网络流</title>
    <link href="https://boctorio.github.io/2019/08/14/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    <id>https://boctorio.github.io/2019/08/14/网络流/</id>
    <published>2019-08-14T00:34:46.000Z</published>
    <updated>2019-08-14T02:36:48.819Z</updated>
    
    <content type="html"><![CDATA[<p>网络流是一种类比于水流，找出源点到汇点最大流量的一类问题。</p><a id="more"></a><p>先来看一个经典的网络流问题(<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1532" target="_blank" rel="noopener">HDU1532</a>)：</p><blockquote><p>每当约翰的田里下雨，贝西最喜欢的三叶草地里就会形成一个池塘。这意味着三叶草被水覆盖了一段时间，需要很长时间才能重新生长。因此，农夫约翰建了一套排水沟，这样贝西的苜蓿地就不会被水覆盖了。相反，水就会被排到附近的小溪。作为一名一流的工程师，农夫约翰还在每条水沟的开头安装了调节器，这样他就能控制水流进水沟的速度。农夫约翰不仅知道每分钟每条沟渠能输送多少加仑的水，还知道沟渠的精确布局，这些沟渠从池塘里流出，相互流入，形成一个潜在的复杂网络。根据所有这些信息，确定水从池塘中进入小溪的最大速度。对于任何给定的沟渠，水只朝一个方向流动，但可能有一种方式可以让水在一个圆圈中流动。<br>多组输入。对于每种情况，第一行包含两个空格分隔的整数，$N (0 \leq N \leq 200)$和$M (2 \leq M \leq 200)$。N是农民约翰挖的沟的数目。$M$是这些沟渠的交叉点个数。节点1是池塘。节点$M$是汇点。下面$N$行中的每一行都包含三个整数，$Si$、$Ei$和$Ci$。$Si$和$Ei$ $(1 \leq Si, Ei \leq M)$表示该沟渠流经的两个节点。水将通过这条沟从$Si$流到$Ei$。$Ci (0 \leq Ci \leq 10^7)$是水流通过沟渠的最大速度。<br>对于每组样例，输出一个整数，即从池塘中排空水的最大速度。<br>样例输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; 5 4</span><br><span class="line">&gt; 1 2 40</span><br><span class="line">&gt; 1 4 20</span><br><span class="line">&gt; 2 4 20</span><br><span class="line">&gt; 2 3 30</span><br><span class="line">&gt; 3 4 10</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>样例输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 50</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>对于网络流问题，本文使用 $Dinic$ 算法来讲解。</p><h3 id="Dinic算法"><a href="#Dinic算法" class="headerlink" title="Dinic算法"></a>Dinic算法</h3><p>Dinic算法的大致步骤为：</p><blockquote><ol><li>对于一个已经建好边的图，我们需要对每一条边都取反建一条反边，其流量为0。</li><li>对当前图跑一边BFS，确定每个可达点（流量不为0）的层次（即距离源点的远近关系），如果到达不了汇点，则跳转至4。此图一般叫做层次图。</li><li>对已确定关系的图跑一次DFS，找出一条从源点到汇点的水流，若找到，继续执行3，否则，跳转至2。</li><li>输出总和。</li><li>（弧优化）</li></ol></blockquote><p>每一步作用为：</p><h4 id="1-建反边"><a href="#1-建反边" class="headerlink" title="1. 建反边"></a>1. 建反边</h4><p>建立反向边的意义为为了保证贪心的过程是正确的，假如不建立反向边，贪心的策略可能会发生错误，可以认为反向边是为了容错。这一点可以参考白书$p210,p211$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll from,ll to,ll dis)</span></span>&#123;</span><br><span class="line">    G[cnt].to=to;</span><br><span class="line">    G[cnt].dis=dis;</span><br><span class="line">    G[cnt].nxt=head[from];</span><br><span class="line">    head[from]=cnt++;<span class="comment">//此处使用链式前向星存图</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-BFS"><a href="#2-BFS" class="headerlink" title="2. BFS"></a>2. BFS</h4><p>找出贪心的顺序，$Dinic$ 算法就是每次找出一条最短的增广路，因此需要$BFS$ 将每个点的层次计算出来，方便接下来进行计算。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">-1</span>,<span class="keyword">sizeof</span>(d));<span class="comment">//初始化均不可达</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;ll&gt;que;</span><br><span class="line">    que.push(s);</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        ll u=que.front();que.pop();</span><br><span class="line">        <span class="keyword">for</span>(ll i=head[u];i!=<span class="number">-1</span>;i=G[i].nxt)&#123;</span><br><span class="line">            ll v=G[i].to;</span><br><span class="line">            <span class="keyword">if</span>(d[v]==<span class="number">-1</span> &amp;&amp; G[i].dis&gt;<span class="number">0</span>)&#123;<span class="comment">//联通(有流量)且之前未到达</span></span><br><span class="line">                d[v]=d[u]+<span class="number">1</span>;</span><br><span class="line">                que.push(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-DFS"><a href="#3-DFS" class="headerlink" title="3. DFS"></a>3. DFS</h4><p>对于每一次$BFS$ ,使用 $DFS$ 将现在的层次图中所有的增广路全部找出来（榨干）。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll u,ll flow)</span></span>&#123;<span class="comment">//flow为u之前增广路上所有的边的最小值，因为一条路径的流量即为这条路径上的最小值</span></span><br><span class="line">    <span class="keyword">if</span>(u==t) <span class="keyword">return</span> flow;</span><br><span class="line">    ll x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=cur[u];i!=<span class="number">-1</span>;i=G[i].nxt)&#123;</span><br><span class="line">        cur[u]=G[i].nxt<span class="comment">//此处为弧优化，接下来会讲</span></span><br><span class="line">        ll v=G[i].to;</span><br><span class="line">        <span class="keyword">if</span>(d[v]==d[u]+<span class="number">1</span> &amp;&amp; G[i].dis&gt;<span class="number">0</span>)&#123;<span class="comment">//向下增广</span></span><br><span class="line">            ll res = dfs(v,min(flow,G[i].dis));</span><br><span class="line">            flow -= res;</span><br><span class="line">            x += res;<span class="comment">//x为当前节点向下能够增广的最大流量</span></span><br><span class="line">            </span><br><span class="line">            G[i].dis   -= res;<span class="comment">//找到增光路后，路径上的每一条边都要减去flow,其反向边都要加上flow</span></span><br><span class="line">            G[i^<span class="number">1</span>].dis += res;<span class="comment">//cnt从0开始计数，每条边与其反向边只有最低为不相同，因此^1即为反向边</span></span><br><span class="line">            <span class="keyword">if</span>(flow == <span class="number">0</span>) <span class="keyword">break</span>;<span class="comment">//flow=0即为已经将这条路径前半部分全部使用完毕，不能够再继续使用了</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!x) d[u]=<span class="number">-1</span>;<span class="comment">//如果当前点到达不了汇点，那么以后就不走这个点了</span></span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-输出总和"><a href="#4-输出总和" class="headerlink" title="4. 输出总和"></a>4. 输出总和</h4><p>如题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dinic</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll max_flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        bfs();<span class="comment">//层次图</span></span><br><span class="line">        <span class="keyword">if</span>(d[t]==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++) cur[i]=head[i];<span class="comment">//弧优化</span></span><br><span class="line">        max_flow+=dfs(s,INF);<span class="comment">//计算流量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,max_flow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-弧优化"><a href="#5-弧优化" class="headerlink" title="5. 弧优化"></a>5. 弧优化</h4><p>如果是单纯的$dfs$，会浪费许多时间在已经遍历过的边上，对于一些已经被访问过或已经被榨干的边，我们在$DFS$ 的过程中就不需要再去访问，因此我们用 $cur[\space]$ 数组去存储当前节点接下来应该访问的节点，不需要再花费时间在那些无用的节点上。</p><p>完整代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line">ll n,m,s,t,u,v,w;</span><br><span class="line">ll cnt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    ll to,dis,nxt;</span><br><span class="line">&#125;G[maxn];</span><br><span class="line">ll head[maxn],d[maxn],cur[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll from,ll to,ll dis)</span></span>&#123;</span><br><span class="line">    G[cnt].to=to;</span><br><span class="line">    G[cnt].dis=dis;</span><br><span class="line">    G[cnt].nxt=head[from];</span><br><span class="line">    head[from]=cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll u,ll flow)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==t) <span class="keyword">return</span> flow;</span><br><span class="line">    ll x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=cur[u];i!=<span class="number">-1</span>;i=G[i].nxt)&#123;</span><br><span class="line">        cur[u]=G[i].nxt;</span><br><span class="line">        ll v=G[i].to;</span><br><span class="line">        <span class="keyword">if</span>(d[v]==d[u]+<span class="number">1</span> &amp;&amp; G[i].dis&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            ll res = dfs(v,min(flow,G[i].dis));</span><br><span class="line">            flow -= res;</span><br><span class="line">            x += res;</span><br><span class="line">            G[i].dis   -= res;</span><br><span class="line">            G[i^<span class="number">1</span>].dis += res;</span><br><span class="line">            <span class="keyword">if</span>(flow == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!x) d[u]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">-1</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line">    <span class="built_in">queue</span>&lt;ll&gt;que;</span><br><span class="line">    que.push(s);</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        ll u=que.front();que.pop();</span><br><span class="line">        <span class="keyword">for</span>(ll i=head[u];i!=<span class="number">-1</span>;i=G[i].nxt)&#123;</span><br><span class="line">            ll v=G[i].to;</span><br><span class="line">            <span class="keyword">if</span>(d[v]==<span class="number">-1</span> &amp;&amp; G[i].dis&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                d[v]=d[u]+<span class="number">1</span>;</span><br><span class="line">                que.push(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dinic</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll max_flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        bfs();</span><br><span class="line">        <span class="keyword">if</span>(d[t]==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++) cur[i]=head[i];</span><br><span class="line">        max_flow+=dfs(s,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,max_flow);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;m,&amp;n))&#123;</span><br><span class="line">        s=<span class="number">1</span>,t=n;</span><br><span class="line">        <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">            add(u,v,w);</span><br><span class="line">            add(v,u,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        dinic();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网络流是一种类比于水流，找出源点到汇点最大流量的一类问题。&lt;/p&gt;
    
    </summary>
    
      <category term="网络流" scheme="https://boctorio.github.io/categories/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
    
  </entry>
  
  <entry>
    <title>All-one Matrices--2019牛客暑期多校训练营(第八场)-A题</title>
    <link href="https://boctorio.github.io/2019/08/13/All-one-Matrices-2019%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E5%85%AB%E5%9C%BA-A%E9%A2%98/"/>
    <id>https://boctorio.github.io/2019/08/13/All-one-Matrices-2019牛客暑期多校训练营-第八场-A题/</id>
    <published>2019-08-13T03:26:11.000Z</published>
    <updated>2019-08-13T03:49:57.803Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/888/A" target="_blank" rel="noopener">题目链接（暂未开放）</a></p><p>题目大意为：</p><blockquote><p>给你一个 $n*m$ 的01矩阵，让你找出数量最多的全1矩阵，使得他们不被包含在其他任何全1矩阵中。<br><a id="more"></a></p><p>样例输入：<br>3 4<br>0111<br>1110<br>0101<br>样例输出：<br>5<br>说明：</p><p>The 5 matrices are $ (1,2)−(1,4)$,  $(1,2)−(2,3)$,  $(1,2)−(3,2)$,  $(2,1)−(2,3)$, $ (3,4)−(3,4)$.</p></blockquote><p>这个题下去写了好久才写出来，坑比较多，处理起来比较复杂。</p><p>​        题目意思就是求所有的不能再扩充的01子矩阵，首先我们需要知道，对于一个全1子矩阵，如果它不能扩充，那么它的上下左右相邻的点必定不是全1，即有0，这个我们可以用前缀和来处理，接下来就是如何求这样一个全1矩阵。<br>​        根据之前学过的知识，求一个全1矩阵，先求每个点向下的连续的1的长度，样例的连续的1的矩阵为：</p><blockquote><p>0 1 1 1<br>1 2 2 0<br>0 3 0 1</p></blockquote><p>​        构造好以后，我们就对每一行利用单调栈进行计算，假如有元素出栈，那么就说明这个元素所对应的全1矩阵已经找到，<strong>不能再扩充了</strong>，那么我们一定知道它向下，向左，向右一定不能扩充，因此我们只需要它能不能向上扩充即可，此时就用到了前缀和。<br>​        当遍历完一行之后，单调栈内可能还有一些元素没有被处理，那么这些元素所对应的矩阵右边界一定为左右边这一列，因此也按照之前的方法进行判断即可。</p><p>​        需要注意的是，每当出栈一个元素，这个元素的左边界就会改变，因此我们还需要一个数组来记录当前元素的左边界的位置。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> mp[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> up[maxn][maxn];<span class="comment">//连续1的长度</span></span><br><span class="line"><span class="keyword">int</span> pre[maxn][maxn];<span class="comment">//前缀和</span></span><br><span class="line"><span class="keyword">int</span> pos[maxn];<span class="comment">//当前行每个元素的左边界</span></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m))&#123;</span><br><span class="line">        <span class="built_in">memset</span>(up,<span class="number">0</span>,<span class="keyword">sizeof</span>(up));</span><br><span class="line">        <span class="built_in">memset</span>(pre,<span class="number">0</span>,<span class="keyword">sizeof</span>(pre));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,mp[i]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">                up[i][j]=up[i+<span class="number">1</span>][j];</span><br><span class="line">                <span class="keyword">if</span>(mp[i][j]==<span class="string">'1'</span>) up[i][j]++;</span><br><span class="line">                <span class="keyword">else</span> up[i][j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                pre[i][j]=pre[i][j<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">if</span>(mp[i][j]==<span class="string">'1'</span>) pre[i][j]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;st;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                pos[j]=j;</span><br><span class="line">                <span class="keyword">while</span>(!st.empty() &amp;&amp; up[i][st.top()]&gt;=up[i][j])&#123;</span><br><span class="line">                    <span class="keyword">if</span>(up[i][st.top()]!=up[i][j])&#123;<span class="comment">//相同的长度可以不做考虑，直接跳过，因为它必定包含在当前这个更大的矩阵中</span></span><br><span class="line">                        <span class="keyword">if</span>(pre[i<span class="number">-1</span>][j<span class="number">-1</span>]-pre[i<span class="number">-1</span>][pos[st.top()]<span class="number">-1</span>]!=j-pos[st.top()]) ans++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    pos[j]=pos[st.top()];</span><br><span class="line">                    st.pop();</span><br><span class="line">                &#125;</span><br><span class="line">                st.push(j);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(!st.empty())&#123;<span class="comment">//剩下元素右边界均为m</span></span><br><span class="line">                <span class="keyword">if</span>(up[i][st.top()]!=<span class="number">0</span> &amp;&amp; pre[i<span class="number">-1</span>][m]-pre[i<span class="number">-1</span>][pos[st.top()]<span class="number">-1</span>]!=m-pos[st.top()]+<span class="number">1</span>) ans++;</span><br><span class="line">                st.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/888/A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接（暂未开放）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题目大意为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个 $n*m$ 的01矩阵，让你找出数量最多的全1矩阵，使得他们不被包含在其他任何全1矩阵中。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前缀和" scheme="https://boctorio.github.io/categories/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
      <category term="单调栈" scheme="https://boctorio.github.io/categories/%E5%89%8D%E7%BC%80%E5%92%8C/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>最大子段和</title>
    <link href="https://boctorio.github.io/2019/08/08/%E6%9C%80%E5%A4%A7%E5%8C%BA%E9%97%B4%E5%AD%90%E6%AE%B5%E5%92%8C/"/>
    <id>https://boctorio.github.io/2019/08/08/最大区间子段和/</id>
    <published>2019-08-08T13:09:03.000Z</published>
    <updated>2019-08-09T00:32:12.083Z</updated>
    
    <content type="html"><![CDATA[<p>最大字段和问题为：</p><blockquote><p>给你一个数组，求这个数组中连续子区间和的最大值。</p></blockquote><a id="more"></a><h3 id="最大字段和"><a href="#最大字段和" class="headerlink" title="最大字段和"></a>最大字段和</h3><p>前置知识：<strong>线段树</strong>。</p><p>我们将数组中所有的元素存入线段树，然后利用线段树求解此问题。<br>我们需要开四个数组：$pre[\space],nxt[\space],sum[\space],val[\space]$，其分别对应于：</p><blockquote><p>$pre[\space]$:最大前缀<br>$nxt[\space]$:最大后缀<br>$sum[\space]$:区间和<br>$val[\space]$:区间最大字段和</p></blockquote><p>对于每个数组，其更新为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pre[i]=max(pre[i*<span class="number">2</span>+<span class="number">1</span>],sum[i*<span class="number">2</span>+<span class="number">1</span>]+pre[i*<span class="number">2</span>+<span class="number">2</span>]);</span><br><span class="line">nxt[i]=max(nxt[i*<span class="number">2</span>+<span class="number">2</span>],sum[n*<span class="number">2</span>+<span class="number">2</span>]+nxt[i*<span class="number">2</span>+<span class="number">1</span>]);</span><br><span class="line">sum[i]=sum[i*<span class="number">2</span>+<span class="number">1</span>]+sum[i*<span class="number">2</span>+<span class="number">2</span>];</span><br><span class="line">val[i]=max(max(val[i*<span class="number">2</span>+<span class="number">1</span>],val[i*<span class="number">2</span>+<span class="number">2</span>]),nxt[i*<span class="number">2</span>+<span class="number">1</span>]+pre[i*<span class="number">2</span>+<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><p>其更新原理为：</p><h4 id="pre"><a href="#pre" class="headerlink" title="pre[]"></a>pre[]</h4><p>对于下面这个区间：</p><p><img src="/2019/08/08/最大区间子段和/1.png" alt=""></p><p>他的最大前缀可能为</p><p><img src="/2019/08/08/最大区间子段和/2.png" alt=""></p><p>其对应的子区间状态为(pre[i]=pre[i*2+1])：</p><p><img src="/2019/08/08/最大区间子段和/3.png" alt=""></p><p>而对于另一种前缀:</p><p><img src="/2019/08/08/最大区间子段和/4.png" alt=""></p><p>其对应子区间状态为(pre[i]=sum[i*2+1]+pre[i*2+2])：</p><p><img src="/2019/08/08/最大区间子段和/5.png" alt=""></p><h4 id="nxt"><a href="#nxt" class="headerlink" title="nxt[]"></a>nxt[]</h4><p>同上,略。</p><h4 id="sum"><a href="#sum" class="headerlink" title="sum[]"></a>sum[]</h4><p>区间求和，线段树基本操作。</p><h4 id="val"><a href="#val" class="headerlink" title="val[]"></a>val[]</h4><p>对于一个最大字段和，其有可能是只在左半边或右半边，也有可能左右兼有。即可得。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最大字段和问题为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个数组，求这个数组中连续子区间和的最大值。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="区间子段和" scheme="https://boctorio.github.io/categories/%E5%8C%BA%E9%97%B4%E5%AD%90%E6%AE%B5%E5%92%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>Snowy Smile--2019杭电暑期多校训练营(第六场)-E题</title>
    <link href="https://boctorio.github.io/2019/08/08/Snowy-Smile-2019%E6%9D%AD%E7%94%B5%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E5%85%AD%E5%9C%BA-E%E9%A2%98/"/>
    <id>https://boctorio.github.io/2019/08/08/Snowy-Smile-2019杭电暑期多校训练营-第六场-E题/</id>
    <published>2019-08-08T12:52:49.000Z</published>
    <updated>2019-08-08T13:21:58.391Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6638" target="_blank" rel="noopener">题目传送门</a></p><p>题目大意为：</p><blockquote><p>给你 $n(1 \leq n \leq 2000)$个宝箱的坐标，每个宝箱都有一个坐标$(x_i,y_i)(-1e9 \leq x_i,y_i \leq 1e9) $ 价值 $w_i(-1e9 \leq w_i \leq 1e9)$，让你构造一个矩形，使得这个矩形中包含的值总和最大，并输出这个值。</p></blockquote><a id="more"></a><p>这是一个非常好的题目，我们先把点进行离散化，然后就能够将坐标范围缩小到2000，然后就可以利用线段树动态的来求<a href="http://localhost:4000/2019/08/08/%E6%9C%80%E5%A4%A7%E5%8C%BA%E9%97%B4%E5%AD%90%E6%AE%B5%E5%92%8C/" target="_blank" rel="noopener">区间最大子段和</a>。</p><p>将坐标离散化后，开始枚举矩形的左右边界。对每一个左边界，我们依次枚举右边界,将处于左右边界之间的点根据 $y$ 值存入一维线段树，然后对当前状态在线段树上 $log$ 时间查询区间最大子段和（计算上下边界）即可。时间复杂度约为$O(n^2log(n))$</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">10000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm=<span class="number">20000</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll x,y,w;</span><br><span class="line">&#125;p[maxn];</span><br><span class="line">ll t,q,n,m,N,a[maxn],b[maxn];</span><br><span class="line">ll pre[maxm],nxt[maxm],s[maxm],tree[maxm];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node i,node j)</span></span>&#123;<span class="keyword">return</span> i.x&lt;j.x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123; N=<span class="number">1</span>; <span class="keyword">while</span>(N&lt;m) N*=<span class="number">2</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N*<span class="number">2</span>;i++) pre[i]=nxt[i]=s[i]=tree[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(ll k,ll x)</span></span>&#123;</span><br><span class="line">    k+=N<span class="number">-1</span>;</span><br><span class="line">    s[k]+=x;</span><br><span class="line">    <span class="keyword">if</span>(s[k]&gt;<span class="number">0</span>) pre[k]=nxt[k]=tree[k]=s[k];</span><br><span class="line">    <span class="keyword">else</span> pre[k]=nxt[k]=tree[k]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k)&#123;</span><br><span class="line">        k=(k<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">        s[k]=s[k*<span class="number">2</span>+<span class="number">1</span>]+s[k*<span class="number">2</span>+<span class="number">2</span>];</span><br><span class="line">        pre[k]=max(pre[k*<span class="number">2</span>+<span class="number">1</span>],s[k*<span class="number">2</span>+<span class="number">1</span>]+pre[k*<span class="number">2</span>+<span class="number">2</span>]);</span><br><span class="line">        nxt[k]=max(nxt[k*<span class="number">2</span>+<span class="number">2</span>],s[k*<span class="number">2</span>+<span class="number">2</span>]+nxt[k*<span class="number">2</span>+<span class="number">1</span>]);</span><br><span class="line">        tree[k]=max(max(tree[k*<span class="number">2</span>+<span class="number">1</span>],tree[k*<span class="number">2</span>+<span class="number">2</span>]),nxt[k*<span class="number">2</span>+<span class="number">1</span>]+pre[k*<span class="number">2</span>+<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    ll i,j,k;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span> || p[i].x!=p[i<span class="number">-1</span>].x)&#123;</span><br><span class="line">            build();</span><br><span class="line">            <span class="keyword">for</span>(j=i;j&lt;=q;j=k)&#123;</span><br><span class="line">                <span class="keyword">for</span>(k=j;k&lt;=q &amp;&amp; p[j].x==p[k].x;k++) update(p[k].y,p[k].w);</span><br><span class="line">                ans=max(ans,tree[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;q);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;p[i].x,&amp;p[i].y,&amp;p[i].w);</span><br><span class="line">            a[i]=p[i].x;b[i]=p[i].y;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a+<span class="number">1</span>,a+q+<span class="number">1</span>);n=unique(a+<span class="number">1</span>,a+q+<span class="number">1</span>)-(a+<span class="number">1</span>);</span><br><span class="line">        sort(b+<span class="number">1</span>,b+q+<span class="number">1</span>);m=unique(b+<span class="number">1</span>,b+q+<span class="number">1</span>)-(b+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            p[i].x=lower_bound(a+<span class="number">1</span>,a+n+<span class="number">1</span>,p[i].x)-a<span class="number">-1</span>;</span><br><span class="line">            p[i].y=lower_bound(b+<span class="number">1</span>,b+m+<span class="number">1</span>,p[i].y)-b<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(p+<span class="number">1</span>,p+q+<span class="number">1</span>,cmp);</span><br><span class="line">        init();</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=6638&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题目大意为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你 $n(1 \leq n \leq 2000)$个宝箱的坐标，每个宝箱都有一个坐标$(x_i,y_i)(-1e9 \leq x_i,y_i \leq 1e9) $ 价值 $w_i(-1e9 \leq w_i \leq 1e9)$，让你构造一个矩形，使得这个矩形中包含的值总和最大，并输出这个值。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="线段树" scheme="https://boctorio.github.io/categories/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="最大子段和" scheme="https://boctorio.github.io/categories/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>康托展开和逆康托展开</title>
    <link href="https://boctorio.github.io/2019/08/05/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80%E5%92%8C%E9%80%86%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/"/>
    <id>https://boctorio.github.io/2019/08/05/康托展开和逆康托展开/</id>
    <published>2019-08-05T13:15:07.000Z</published>
    <updated>2019-08-09T00:16:11.861Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>康托展开是一个全排列到一个自然数的双射，常用于构建哈希表时的空间压缩。 康托展开的实质是计算当前排列在所有由小到大全排列中的顺序，因此是可逆的。（源于百度百科）</p></blockquote><a id="more"></a><h3 id="康托展开"><a href="#康托展开" class="headerlink" title="康托展开"></a>康托展开</h3><p>康托展开可以在非常短的时间内计算出某个全排列在所有长度相同的全排列中的顺序，其基本思想为：</p><blockquote><p>从左至右计算出当前位所对应的贡献，将每一位的贡献累加即可计算出这个全排列的顺序，其贡献为 $a_i * (n-i)!+1(1 \leq i \leq n)$ ,其中 $a_i $ 表示<strong>第 $i$ 位后面有多少位的值小于当前位的值</strong>。</p></blockquote><p>举例说明：$5, 3, 2, 4, 1$ ，其顺序为：<br>$$<br>4*(5-1)!+2*(5-2)!+1*(5-3)!+1*(5-4)!+0*(5-5)!+1=112<br>$$<br>所以其是第$112$个全排列，至于最后为什么加$1$，因为对于全排列 $1,2,3,4,5$ ，计算出来的值为：<br>$$<br>0*(5-1)!+0*(5-2)!+0*(5-3)!+0*(5-4)!+0*(5-5)!=0<br>$$<br>其对应的顺序为$0$，所以需要$+1$来修正这个顺序。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cantor</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll sum=<span class="number">1</span>,fac=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">        fac*=(n-i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;a[j]) sum+=fac;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至于为什么这样算，略……（毕竟证明确实不算难）</p><h3 id="逆康托展开"><a href="#逆康托展开" class="headerlink" title="逆康托展开"></a>逆康托展开</h3><p>逆康托展开与康托展开相对应，求第 $i$ 个全排列的值。</p><p>其求解过程与康托展开类似，也是从左至右一位一位进行求解，但过程相对康托展开有些繁琐：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inverse_cantor</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll fac=<span class="number">1</span>,num;</span><br><span class="line">    k--;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) fac*=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        num=k/fac;</span><br><span class="line">        k%=fac;</span><br><span class="line">        <span class="keyword">if</span>(n-i) fac/=(n-i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(num==<span class="number">0</span> &amp;&amp; !vis[j])&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>,j);</span><br><span class="line">                vis[j]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j]) num--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;康托展开是一个全排列到一个自然数的双射，常用于构建哈希表时的空间压缩。 康托展开的实质是计算当前排列在所有由小到大全排列中的顺序，因此是可逆的。（源于百度百科）&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数论" scheme="https://boctorio.github.io/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
</feed>
